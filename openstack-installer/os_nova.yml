---

- hosts: nova_controller[0]
  max_fail_percentage: 0
  roles:
    - role: os_keystone_service
      keystone_service_name: nova
      keystone_service_type: compute
      keystone_service_description: "OpenStack Compute Service"
      keystone_public_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_public_address }}:8774/v2.1"
      keystone_internal_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_internal_address }}:8774/v2.1"
      keystone_admin_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_admin_address }}:8774/v2.1"
      keystone_region: "{{ keystone_region_name }}"
      keystone_users:
        - keystone_user: "{{ nova_admin_user | default('nova') }}"
          keystone_domain_name: "{{ nova_domain_name | default(keystone_domain_name) }}"
          keystone_password: "{{ nova_admin_password }}"
          keystone_project_name: "{{ keystone_service_project_name | default('service') }}"
          keystone_project_domain_name: "{{ keystone_service_project_domain_name | default(keystone_domain_name) }}"
          keystone_role:
            - admin
            - service

- hosts: nova_controller[0]
  max_fail_percentage: 0
  roles:
    - role: os_keystone_service
      keystone_service_name: placement
      keystone_service_type: placement
      keystone_service_description: "OpenStack Placement Service"
      keystone_public_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_public_address }}:8780"
      keystone_internal_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_internal_address }}:8780"
      keystone_admin_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_admin_address }}:8780"
      keystone_region: "{{ keystone_region_name }}"
      keystone_users:
        - keystone_user: "{{ placement_admin_user | default('placement') }}"
          keystone_domain_name: "{{ placement_domain_name | default(keystone_domain_name) }}"
          keystone_password: "{{ placement_admin_password }}"
          keystone_project_name: "{{ keystone_service_project_name | default('service') }}"
          keystone_project_domain_name: "{{ keystone_service_project_domain_name | default(keystone_domain_name) }}"
          keystone_role:
            - admin
            - service

- hosts: nova_compute
  become: True
  max_fail_percentage: 0
  roles:
    - role: hosts
      hosts: "{{ groups['nova_compute'] }}"

- hosts:
    - nova_controller
    - nova_compute
  become: True
  max_fail_percentage: 0
  roles:
    - apt
    - os_nova

- hosts: nova_controller
  become: True
  max_fail_percentage: 0
  roles:
    - role: apache_frontend
      apache_service_name: nova
      apache_service_ssl: "{{ os_ssl | default(False) }}"
      apache_services:
        - { port: 8774 }

    - role: apache_frontend
      apache_service_name: nova-metadata
      apache_service_ssl: False
      apache_services:
        - { port: 8775 }

    - role: apache_frontend
      apache_service_name: placement
      apache_service_ssl: "{{ os_ssl | default(False) }}"
      apache_services:
        - { port: 8780, wsgi_process: "placement", wsgi_user: "nova", wsgi_group: "nova", wsgi_script: "/var/www/cgi-bin/nova/placement-api" }

- hosts: nova_compute
  become: True
  max_fail_percentage: 0
  vars:
    users: []
  pre_tasks:
    - name: collect cinder backends
      set_fact:
        users: "{{ users + [ {
          'cluster_name': item.ceph_cluster_name,
          'monitors': item.ceph_monitors | default(groups.ceph_monitor),
          'user': item.ceph_user,
          'rights': 'mon \"profile rbd\" osd \"profile rbd pool=' + item.ceph_pool + ', profile rbd pool=' + nova_ephemeral_ceph_pool | default('vms') + ', profile rbd-read-only pool=' + glance_ceph_pool | default('images') + '\"',
          'key': item.ceph_key | default(None),
          'keyring_owner': 'nova',
          'keyring_group': (inventory_hostname in groups['cinder_volume']) | ternary('cinder','root'),
          'volume_secret_uuid': item.volume_secret_uuid } ] }}"
      with_items: "{{ cinder_backends | default([]) }}"
      when: cinder_backends is defined and item.backend == 'ceph'

    - name: collect the only cinder backend
      set_fact:
        users:
          - cluster_name: "{{ ceph_cluster_name | default('ceph') }}"
            monitors: "{{ ceph_monitors | default(groups['ceph_monitor']) }}"
            user: "{{ cinder_ceph_user | default('cinder') }}"
            rights: "mon 'profile rbd' osd 'profile rbd pool={{ cinder_ceph_pool | default('volumes') }}, profile rbd pool={{ nova_ephemeral_ceph_pool | default('vms') }}, profile rbd-read-only pool={{ glance_ceph_pool | default('images') }}'"
            key: "{{ cinder_ceph_key | default(None) }}"
            keyring_owner: nova
            keyring_group: "{{ (inventory_hostname in groups['cinder_volume']) | ternary('cinder','root') }}"
            volume_secret_uuid: "{{ cinder_volume_secret_uuid }}"
      when: cinder_backends is not defined and cinder_backend | default('lvm') == 'ceph'

    - name: collect nova ceph backend
      set_fact:
        users: "{{ users + [ {
          'cluster_name': ceph_cluster_name | default('ceph'),
          'monitors': ceph_monitors | default(groups.ceph_monitor),
          'user': nova_ephemeral_ceph_user | default(cinder_ceph_user) | default('cinder'),
          'rights': 'mon \"profile rbd\" osd \"profile rbd pool=' + cinder_ceph_pool | default('volumes') + ', profile rbd pool=' + nova_ephemeral_ceph_pool | default('vms') + ', profile rbd-read-only pool=' + glance_ceph_pool | default('images') + '\"',
          'key': nova_ephemeral_ceph_key | default(None),
          'keyring_owner': 'nova',
          'keyring_group': (inventory_hostname in groups['cinder_volume']) | ternary('cinder','root'),
          'volume_secret_uuid': nova_ephemeral_volume_secret_uuid | default(cinder_volume_secret_uuid) } ] }}"
      when: nova_ephemeral_backend | default('local') == 'ceph'

  roles:
    - role: ceph_client
      ceph_users: "{{ users }}"
  tasks:
    - name: get cinder key
      command: ceph-authtool /etc/ceph/{{ item.cluster_name | default('ceph') }}.client.{{ item.user | default('cinder') }}.keyring -p -n client.{{ item.user | default('cinder') }}
      register: cinder_key
      changed_when: False
      with_items: "{{ users }}"
      run_once: True

    - name: install cinder secret into virsh
      command: 'virsh secret-set-value --secret {{ item.item.volume_secret_uuid }} --base64 {{ item.stdout }}'
      with_items: "{{ cinder_key.results }}"
      when: nova_compute_package | default('kvm') in ('qemu','kvm')

- hosts: haproxy
  become: True
  max_fail_percentage: 0
  roles:
    - role: haproxy_service
      haproxy_services:
        - haproxy_service_name: nova_api
          haproxy_backend_nodes: "{{ groups['nova_controller'] }}"
          haproxy_bind_hosts:
            - "{{ vip_mgmt }}"
            - "{{ vip_public }}"
          haproxy_port: 8774
          haproxy_balance_type: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}"
          haproxy_backend_options: "{{ (os_ssl | default(False)) | ternary(['httpchk'], ['forwardfor', 'httpchk', 'httplog']) }}"

        - haproxy_service_name: nova_api_metadata
          haproxy_backend_nodes: "{{ groups['nova_controller'] }}"
          haproxy_bind_hosts:
            - "{{ vip_mgmt }}"
            - "{{ vip_public }}"
          haproxy_port: 8775
          haproxy_balance_type: http
          haproxy_backend_options:
            - forwardfor
            - httpchk
            - httplog

        - haproxy_service_name: placement_api
          haproxy_backend_nodes: "{{ groups['nova_controller'] }}"
          haproxy_bind_hosts:
            - "{{ vip_mgmt }}"
            - "{{ vip_public }}"
          haproxy_port: 8780
          haproxy_balance_type: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}"
          haproxy_backend_options: "{{ (os_ssl | default(False)) | ternary(['httpchk GET /'], ['forwardfor', 'httpchk GET /', 'httplog']) }}"

        - haproxy_service_name: nova_console
          haproxy_backend_nodes: "{{ groups['nova_controller'] }}"
          haproxy_bind_hosts:
            - "{{ vip_mgmt }}"
            - "{{ vip_public }}"
          haproxy_port: 6082
          haproxy_balance_type: tcp
          haproxy_timeout_client: 60m
          haproxy_timeout_server: 60m
          haproxy_balance_alg: source

        - haproxy_service_name: nova_console_novnc
          haproxy_backend_nodes: "{{ groups['nova_controller'] }}"
          haproxy_bind_hosts:
            - "{{ vip_mgmt }}"
            - "{{ vip_public }}"
          haproxy_port: 6080
          haproxy_balance_type: tcp
          haproxy_timeout_client: 60m
          haproxy_timeout_server: 60m
          haproxy_balance_alg: source
