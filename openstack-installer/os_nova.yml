---

- hosts: nova_controller[0]
  max_fail_percentage: 0
  roles:
    - os_keystone_service
  vars:
    keystone_service_name: nova
    keystone_service_type: compute
    keystone_service_description: "OpenStack Compute Service"
    keystone_public_url: "http://{{ vip_public }}:8774/v2/%(tenant_id)s"
    keystone_internal_url: "http://{{ vip_mgmt }}:8774/v2/%(tenant_id)s"
    keystone_admin_url: "http://{{ vip_mgmt }}:8774/v2/%(tenant_id)s"
    keystone_region: "{{ keystone_region_name }}"
    keystone_users:
      - keystone_user: "{{ nova_admin_user | default('nova') }}"
        keystone_domain_name: "{{ nova_domain_name | default(keystone_domain_name) }}"
        keystone_password: "{{ nova_admin_password }}"
        keystone_project_name: "{{ keystone_service_project_name | default('service') }}"
        keystone_project_domain_name: "{{ keystone_service_project_domain_name | default(keystone_domain_name) }}"
        keystone_role: admin

- hosts:
    - nova_controller
    - nova_compute
  sudo: True
  max_fail_percentage: 0
  roles:
    - common
    - os_nova

- hosts: nova_compute
  sudo: True
  max_fail_percentage: 0
  roles:
    - { role: ceph_client, when: cinder_backend == 'ceph' or nova_ephermal_backend == 'ceph' }
  tasks:
    - name: get cinder key
      command: ceph auth get-key client.{{ cinder_ceph_user }}
      register: cinder_key
      changed_when: False
      delegate_to: "{{ groups['ceph_monitor'][0] }}"
      when: cinder_backend == 'ceph' or nova_ephermal_backend == 'ceph'
      run_once: True

    - name: install cinder secret into virsh
      command: 'virsh secret-set-value --secret {{ cinder_volume_secret_uuid }} --base64 {{ cinder_key.stdout }}'
      when: cinder_backend == 'ceph' or nova_ephermal_backend == 'ceph'
  vars:
    ceph_user: "{{ cinder_ceph_user }}"
    ceph_rights: "mon 'allow r' osd 'allow class-read object_prefix rbd_children, allow rwx pool={{ cinder_ceph_pool }}, allow rwx pool={{ nova_ephermal_ceph_pool }}, allow rx pool={{ glance_ceph_pool }}'"
    ceph_keyring_owner: nova

- hosts: haproxy
  sudo: True
  max_fail_percentage: 0
  roles:
    - haproxy_service
  vars:
    haproxy_services:
      - haproxy_service_name: nova_api
        haproxy_backend_nodes: "{{ groups['nova_controller'] }}"
        haproxy_bind_hosts:
          - "{{ vip_mgmt }}"
          - "{{ vip_public }}"
        haproxy_port: 8774
        haproxy_balance_type: http
        haproxy_backend_options:
          - forwardfor
          - httpchk
          - httplog
      - haproxy_service_name: nova_api_metadata
        haproxy_backend_nodes: "{{ groups['nova_controller'] }}"
        haproxy_bind_hosts:
          - "{{ vip_mgmt }}"
          - "{{ vip_public }}"
        haproxy_port: 8775
        haproxy_balance_type: http
        haproxy_backend_options:
          - httpchk
          - httplog
      - haproxy_service_name: nova_console
        haproxy_backend_nodes: "{{ groups['nova_controller'] }}"
        haproxy_bind_hosts:
          - "{{ vip_mgmt }}"
          - "{{ vip_public }}"
        haproxy_port: 6082
        haproxy_balance_type: tcp
        haproxy_timeout_client: 60m
        haproxy_timeout_server: 60m
        haproxy_balance_alg: source
      - haproxy_service_name: nova_console_novnc
        haproxy_backend_nodes: "{{ groups['nova_controller'] }}"
        haproxy_bind_hosts:
          - "{{ vip_mgmt }}"
          - "{{ vip_public }}"
        haproxy_port: 6080
        haproxy_balance_type: tcp
        haproxy_timeout_client: 60m
        haproxy_timeout_server: 60m
        haproxy_balance_alg: source
