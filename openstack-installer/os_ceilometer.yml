---
- hosts: ceilometer_controller[0]
  max_fail_percentage: 0
  roles:
    - os_keystone_service
  vars:
    keystone_service_name: ceilometer
    keystone_service_type: metering
    keystone_service_description: "OpenStack Telemetry Service"
    keystone_public_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_public_address }}:8777"
    keystone_internal_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_internal_address }}:8777"
    keystone_admin_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_admin_address }}:8777"
    keystone_region: "{{ keystone_region_name }}"
    keystone_users:
      - keystone_user: "{{ ceilometer_admin_user | default('ceilometer') }}"
        keystone_domain_name: "{{ ceilometer_domain_name | default(keystone_domain_name) }}"
        keystone_password: "{{ ceilometer_admin_password }}"
        keystone_project_name: "{{ keystone_service_project_name | default('service') }}"
        keystone_project_domain_name: "{{ keystone_service_project_domain_name | default(keystone_domain_name) }}"
        keystone_role: admin

- hosts: ceilometer_controller[0]
  max_fail_percentage: 0
  roles:
    - os_keystone_service
  vars:
    keystone_service_name: aodh
    keystone_service_type: alarming
    keystone_service_description: "OpenStack Alarming Service"
    keystone_public_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_public_address }}:8042"
    keystone_internal_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_internal_address }}:8042"
    keystone_admin_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_admin_address }}:8042"
    keystone_region: "{{ keystone_region_name }}"
    keystone_users:
      - keystone_user: "{{ aodh_admin_user | default('aodh') }}"
        keystone_domain_name: "{{ aodh_domain_name | default(keystone_domain_name) }}"
        keystone_password: "{{ aodh_admin_password }}"
        keystone_project_name: "{{ keystone_service_project_name | default('service') }}"
        keystone_project_domain_name: "{{ keystone_service_project_domain_name | default(keystone_domain_name) }}"
        keystone_role: admin

- hosts: mongodb
  become: True
  max_fail_percentage: 0
  tasks:
    - name: determine the primary node
      command: mongo --quiet --eval 'rs.isMaster().ismaster'
      register: mongo_master
      changed_when: False

    - name: create ceilometer mongo user
      mongodb_user: login_user=admin login_password={{ mongodb_admin_password }} database=ceilometer name=ceilometer password={{ ceilometer_db_password }}
      when: mongo_master.stdout == 'true'

    - name: create aodh mongo user
      mongodb_user: login_user=admin login_password={{ mongodb_admin_password }} database=aodh name=aodh password={{ aodh_db_password }}
      when: mongo_master.stdout == 'true'

- hosts:
    - ceilometer_controller
    - ceilometer_compute
  become: True
  max_fail_percentage: 0
  roles:
    - common
    - os_ceilometer

- hosts: ceilometer_controller
  become: True
  max_fail_percentage: 0
  roles:
    - apache_frontend
  vars:
    apache_service_name: ceilometer
    apache_service_ssl: "{{ os_ssl | default(False) }}"
    apache_services:
      - { port: 8777 }
      - { port: 8042 }

- hosts: haproxy
  become: True
  max_fail_percentage: 0
  roles:
    - haproxy_service
  vars:
    haproxy_services:
      - haproxy_service_name: ceilometer_api
        haproxy_backend_nodes: "{{ groups['ceilometer_controller'] }}"
        haproxy_bind_hosts:
          - "{{ vip_mgmt }}"
          - "{{ vip_public }}"
        haproxy_port: 8777
        haproxy_balance_type: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}"
        haproxy_backend_options: "{{ (os_ssl | default(False)) | ternary(['httpchk'], ['forwardfor', 'httpchk', 'httplog']) }}"
        haproxy_backend_extras:
          - http-check expect rstatus 200|401
      - haproxy_service_name: aodh_api
        haproxy_backend_nodes: "{{ groups['ceilometer_controller'] }}"
        haproxy_bind_hosts:
          - "{{ vip_mgmt }}"
          - "{{ vip_public }}"
        haproxy_port: 8042
        haproxy_balance_type: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}"
        haproxy_backend_options: "{{ (os_ssl | default(False)) | ternary(['httpchk'], ['forwardfor', 'httpchk', 'httplog']) }}"
        haproxy_backend_extras:
          - http-check expect rstatus 200|401
