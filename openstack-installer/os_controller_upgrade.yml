---

- hosts:
    - keystone
    - swift_proxy
    - swift_storage
    - glance
    - horizon
    - nova_controller
    - neutron_controller
    - ceilometer_controller
    - heat
    - trove
    - cinder
    - murano
    - sahara
    - barbican
    - ironic
    - ceph_radosgw
  become: True
  max_fail_percentage: 0
  roles:
    - common
  pre_tasks:
    - name: check for Ansible version > 2.0.1
      local_action: assert that="{{ ansible_version.string | version_compare('2.0.1', '>=') }}"
      run_once: True
      become: False

# Upgrade keystone all at once, since it is not supporting rolling upgrades yet
- hosts: keystone
  become: True
  max_fail_percentage: 0
  tasks:
    - name: upgrade keystone
      apt: name={{ item }} state=latest
      with_items:
        - keystone
        - python-keystoneclient

- hosts: memcached
  become: True
  max_fail_percentage: 0
  tasks:
    - name: restart memcached
      service: name=memcached state=restarted

- hosts: keystone
  become: True
  max_fail_percentage: 0
  tasks:
    - name: reload apache2
      service: name=apache2 state=reloaded

    - name: run keystone playbook
      local_action: command ansible-playbook os_keystone.yml
      become: False
      run_once: True

- hosts: barbican
  become: True
  max_fail_percentage: 0
  tasks:
    - name: mask barbican-api apache config
      copy: content='' dest=/etc/apache2/conf-available/barbican-api.conf owner=root group=root mode=0644

- hosts:
    - swift_proxy[0]
    - glance[0]
    - horizon[0]
    - nova_controller[0]
    - neutron_controller[0]
    - ceilometer_controller[0]
    - heat[0]
    - trove[0]
    - cinder[0]
    - murano[0]
    - sahara[0]
    - barbican[0]
    - ironic[0]
    - ceph_radosgw[0]
  become: True
  max_fail_percentage: 0
  serial: 1
  tasks:

    - block:

      - name: remove current host from haproxy
        haproxy: host={{ inventory_hostname }} socket=/run/haproxy/admin.sock state=disabled wait=yes
        delegate_to: "{{ item }}"
        with_items: "{{ groups['haproxy'] }}"

      - name: upgrade packages
        apt: upgrade=yes

      - name: run playbooks on the first hosts
        local_action: command ansible-playbook {{ item.playbook }} -l "{{ inventory_hostname }}"
        when: inventory_hostname in item.group
        with_items:
          - { playbook: "os_glance.yml", group: "{{ groups['glance'] }}" }
          - { playbook: "os_neutron.yml", group: "{{ groups['neutron_controller'] }}" }
          - { playbook: "os_nova.yml", group: "{{ groups['nova_controller'] }}" }
          - { playbook: "os_ceilometer.yml", group: "{{ groups['ceilometer_controller'] }}" }
          - { playbook: "os_heat.yml", group: "{{ groups['heat'] }}" }
          - { playbook: "os_cinder.yml", group: "{{ groups['cinder'] }}" }
          - { playbook: "os_trove.yml", group: "{{ groups['trove'] }}" }
          - { playbook: "os_horizon.yml", group: "{{ groups['horizon'] }}" }
          - { playbook: "os_barbican.yml", group: "{{ groups['barbican'] }}" }
          - { playbook: "os_murano.yml", group: "{{ groups['murano'] }}" }
          - { playbook: "os_sahara.yml", group: "{{ groups['sahara'] }}" }
          - { playbook: "ceph_radosgw.yml", group: "{{ groups['ceph_radosgw'] }}" }
        become: False

      always:

        # Don't wait for UP status, since the check is too slow
        # https://github.com/ansible/ansible-modules-extras/pull/1834
        - name: readd current host to haproxy
          haproxy: host={{ inventory_hostname }} socket=/run/haproxy/admin.sock state=enabled
          delegate_to: "{{ item }}"
          with_items: "{{ groups['haproxy'] }}"

- hosts:
    - swift_proxy[1:]
    - glance[1:]
    - horizon[1:]
    - nova_controller[1:]
    - neutron_controller[1:]
    - ceilometer_controller[1:]
    - heat[1:]
    - trove[1:]
    - cinder[1:]
    - murano[1:]
    - sahara[1:]
    - barbican[1:]
    - ironic[1:]
    - ceph_radosgw[1:]
  become: True
  max_fail_percentage: 0
  tasks:

    - block:

      - name: remove hosts[1:] from haproxy
        haproxy: host={{ inventory_hostname }} socket=/run/haproxy/admin.sock state=disabled wait=yes
        delegate_to: "{{ item }}"
        with_items: "{{ groups['haproxy'] }}"

      - name: upgrade packages
        apt: upgrade=yes

      - name: run playbooks on the other hosts
        local_action: command ansible-playbook {{ item.playbook }} -l "{{ inventory_hostname }}"
        when: inventory_hostname in item.group
        with_items:
          - { playbook: "os_glance.yml", group: "{{ groups['glance'] }}" }
          - { playbook: "os_neutron.yml", group: "{{ groups['neutron_controller'] }}" }
          - { playbook: "os_nova.yml", group: "{{ groups['nova_controller'] }}" }
          - { playbook: "os_ceilometer.yml", group: "{{ groups['ceilometer_controller'] }}" }
          - { playbook: "os_heat.yml", group: "{{ groups['heat'] }}" }
          - { playbook: "os_cinder.yml", group: "{{ groups['cinder'] }}" }
          - { playbook: "os_trove.yml", group: "{{ groups['trove'] }}" }
          - { playbook: "os_horizon.yml", group: "{{ groups['horizon'] }}" }
          - { playbook: "os_barbican.yml", group: "{{ groups['barbican'] }}" }
          - { playbook: "os_murano.yml", group: "{{ groups['murano'] }}" }
          - { playbook: "os_sahara.yml", group: "{{ groups['sahara'] }}" }
          - { playbook: "ceph_radosgw.yml", group: "{{ groups['ceph_radosgw'] }}" }
        become: False

      always:

        - name: readd hosts[1:] to haproxy
          haproxy: host={{ inventory_hostname }} socket=/run/haproxy/admin.sock state=enabled
          delegate_to: "{{ item }}"
          with_items: "{{ groups['haproxy'] }}"
