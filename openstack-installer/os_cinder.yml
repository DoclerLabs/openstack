---

- hosts: cinder[0]
  max_fail_percentage: 0
  roles:
    - role: os_keystone_service
      keystone_service_name: cinder
      keystone_service_type: volume
      keystone_service_description: "OpenStack Block Storage Service"
      keystone_public_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_public_address }}:8776/v1/%(tenant_id)s"
      keystone_internal_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_internal_address }}:8776/v1/%(tenant_id)s"
      keystone_admin_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_admin_address }}:8776/v1/%(tenant_id)s"
      keystone_region: "{{ keystone_region_name }}"
      keystone_users:
        - keystone_user: "{{ cinder_admin_user | default('cinder') }}"
          keystone_domain_name: "{{ cinder_domain_name | default(keystone_domain_name) }}"
          keystone_password: "{{ cinder_admin_password }}"
          keystone_project_name: "{{ keystone_service_project_name | default('service') }}"
          keystone_project_domain_name: "{{ keystone_service_project_domain_name | default(keystone_domain_name) }}"
          keystone_role:
            - admin
            - service

    - role: os_keystone_service
      keystone_service_name: cinderv2
      keystone_service_type: volumev2
      keystone_service_description: "OpenStack Block Storage Service V2"
      keystone_public_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_public_address }}:8776/v2/%(tenant_id)s"
      keystone_internal_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_internal_address }}:8776/v2/%(tenant_id)s"
      keystone_admin_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_admin_address }}:8776/v2/%(tenant_id)s"
      keystone_region: "{{ keystone_region_name }}"

    - role: os_keystone_service
      keystone_service_name: cinderv3
      keystone_service_type: volumev3
      keystone_service_description: "OpenStack Block Storage Service V3"
      keystone_public_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_public_address }}:8776/v3/%(tenant_id)s"
      keystone_internal_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_internal_address }}:8776/v3/%(tenant_id)s"
      keystone_admin_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_admin_address }}:8776/v3/%(tenant_id)s"
      keystone_region: "{{ keystone_region_name }}"


- hosts:
    - cinder
    - cinder_volume
  become: True
  max_fail_percentage: 0
  roles:
    - apt
    - os_cinder

- hosts: cinder
  become: True
  max_fail_percentage: 0
  roles:
    - role: apache_frontend
      apache_service_name: cinder
      apache_service_ssl: "{{ os_ssl | default(False) }}"
      apache_services:
        - { port: 8776, wsgi_process: "cinder-api", wsgi_user: "cinder", wsgi_group: "cinder", wsgi_script: "/var/www/cgi-bin/cinder/cinder-api" }

- hosts: cinder_volume
  become: True
  max_fail_percentage: 0
  vars:
    users: []
  pre_tasks:
    - name: collect cinder backends
      set_fact:
        users: "{{ users + [ {
          'cluster_name': item.ceph_cluster_name,
          'monitors': item.ceph_monitors | default(groups.ceph_monitor),
          'user': item.ceph_user,
          'rights': 'mon \"allow r\" osd \"allow class-read object_prefix rbd_children, allow rwx pool=' + item.ceph_pool + ', allow rwx pool=' + nova_ephemeral_ceph_pool | default('vms') + ', allow rx pool=' + glance_ceph_pool | default('images') + '\"',
          'key': item.ceph_key | default(None),
          'keyring_owner': 'root',
          'keyring_group': 'cinder' } ] }}"
      with_items: "{{ cinder_backends | default([]) }}"
      when: cinder_backends is defined and item.backend == 'ceph'

    - name: collect the only cinder backend
      set_fact:
        users:
          - cluster_name: "{{ ceph_cluster_name | default('ceph') }}"
            monitors: "{{ ceph_monitors | default(groups['ceph_monitor']) }}"
            user: "{{ cinder_ceph_user | default('cinder') }}"
            rights: "mon 'allow r' osd 'allow class-read object_prefix rbd_children, allow rwx pool={{ cinder_ceph_pool | default('volumes') }}, allow rwx pool={{ nova_ephemeral_ceph_pool | default('vms') }}, allow rx pool={{ glance_ceph_pool | default('images') }}'"
            key: "{{ cinder_ceph_key | default(None) }}"
            keyring_owner: root
            keyring_group: cinder
      when: cinder_backends is not defined and cinder_backend | default('lvm') == 'ceph'

  roles:
    - role: ceph_client
      ceph_users: "{{ users }}"

    - role: ceph_client
      ceph_users:
         - cluster_name: "{{ (cinder_backup_ceph_cluster_name | default(ceph_cluster_name)) | default('ceph') }}"
           monitors: "{{ cinder_backup_ceph_monitors | default(groups['ceph_monitor']) }}"
           user: "{{ cinder_backup_ceph_user | default('cinder-backup') }}"
           rights: "mon 'allow r' osd 'allow class-read object_prefix rbd_children, allow rwx pool={{ cinder_backup_ceph_pool | default('backups') }}'"
           key: "{{ cinder_backup_ceph_key | default(None) }}"
           keyring_owner: cinder
      when: cinder_backup_backend | default('posix') == 'ceph'

- hosts: haproxy
  become: True
  max_fail_percentage: 0
  roles:
    - role: haproxy_service
      haproxy_services:
        - haproxy_service_name: cinder_api
          haproxy_backend_nodes: "{{ groups['cinder'] }}"
          haproxy_bind_hosts:
            - "{{ vip_mgmt }}"
            - "{{ vip_public }}"
          haproxy_port: 8776
          haproxy_balance_type: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}"
          haproxy_backend_options: "{{ (os_ssl | default(False)) | ternary(['httpchk'], ['forwardfor', 'httpchk', 'httplog']) }}"
