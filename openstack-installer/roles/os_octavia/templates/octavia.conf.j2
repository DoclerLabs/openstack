{% set host_index = groups['heat'].index(inventory_hostname) % groups['rabbitmq'] | count %}
{% set rabbit_hosts = groups['rabbitmq'][host_index:] + groups['rabbitmq'][:host_index] %}
[DEFAULT]

#
# From octavia
#

# The hostname Octavia is running on (hostname value)
#host = lgw01-amd64-020
host = {{ inventory_hostname }}

# Name of the controller plugin to use (string value)
#octavia_plugins = hot_plug_plugin

#
# From oslo.log
#

# If set to true, the logging level will be set to DEBUG instead of the default INFO level. (boolean value)
# Note: This option can be changed without restarting.
#debug = false
debug = {{ octavia_debug }}

# The name of a logging configuration file. This file is appended to any existing logging configuration files. For details about logging
# configuration files, see the Python logging module documentation. Note that when logging configuration files are used then all logging
# configuration is set in the configuration file and other logging configuration options are ignored (for example,
# logging_context_format_string). (string value)
# Note: This option can be changed without restarting.
# Deprecated group/name - [DEFAULT]/log_config
#log_config_append = <None>

# Defines the format string for %%(asctime)s in log records. Default: %(default)s . This option is ignored if log_config_append is set.
# (string value)
#log_date_format = %Y-%m-%d %H:%M:%S

# (Optional) Name of log file to send logging output to. If no default is set, logging will go to stderr as defined by use_stderr. This
# option is ignored if log_config_append is set. (string value)
# Deprecated group/name - [DEFAULT]/logfile
#log_file = <None>

# (Optional) The base directory used for relative log_file  paths. This option is ignored if log_config_append is set. (string value)
# Deprecated group/name - [DEFAULT]/logdir
#log_dir = <None>

# Uses logging handler designed to watch file system. When log file is moved or removed this handler will open a new log file with specified
# path instantaneously. It makes sense only if log_file option is specified and Linux platform is used. This option is ignored if
# log_config_append is set. (boolean value)
#watch_log_file = false

# Use syslog for logging. Existing syslog format is DEPRECATED and will be changed later to honor RFC5424. This option is ignored if
# log_config_append is set. (boolean value)
#use_syslog = false
use_syslog = {{ octavia_syslog_use }}
# Enable journald for logging. If running in a systemd environment you may wish to enable journal support. Doing so will use the journal
# native protocol which includes structured metadata in addition to log messages.This option is ignored if log_config_append is set.
# (boolean value)
#use_journal = false

# Syslog facility to receive log lines. This option is ignored if log_config_append is set. (string value)
#syslog_log_facility = LOG_USER

# Use JSON formatting for logging. This option is ignored if log_config_append is set. (boolean value)
#use_json = false

# Log output to standard error. This option is ignored if log_config_append is set. (boolean value)
#use_stderr = false

# Format string to use for log messages with context. (string value)
#logging_context_format_string = %(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [%(request_id)s %(user_identity)s] %(instance)s%(message)s

# Format string to use for log messages when context is undefined. (string value)
#logging_default_format_string = %(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [-] %(instance)s%(message)s

# Additional data to append to log message when logging level for the message is DEBUG. (string value)
#logging_debug_format_suffix = %(funcName)s %(pathname)s:%(lineno)d

# Prefix each line of exception output with this format. (string value)
#logging_exception_prefix = %(asctime)s.%(msecs)03d %(process)d ERROR %(name)s %(instance)s

# Defines the format string for %(user_identity)s that is used in logging_context_format_string. (string value)
#logging_user_identity_format = %(user)s %(tenant)s %(domain)s %(user_domain)s %(project_domain)s

# List of package logging levels in logger=LEVEL pairs. This option is ignored if log_config_append is set. (list value)
#default_log_levels = amqp=WARN,amqplib=WARN,boto=WARN,qpid=WARN,sqlalchemy=WARN,suds=INFO,oslo.messaging=INFO,oslo_messaging=INFO,iso8601=WARN,requests.packages.urllib3.connectionpool=WARN,urllib3.connectionpool=WARN,websocket=WARN,requests.packages.urllib3.util.retry=WARN,urllib3.util.retry=WARN,keystonemiddleware=WARN,routes.middleware=WARN,stevedore=WARN,taskflow=WARN,keystoneauth=WARN,oslo.cache=INFO,dogpile.core.dogpile=INFO

# Enables or disables publication of error events. (boolean value)
#publish_errors = false

# The format for an instance that is passed with the log message. (string value)
#instance_format = "[instance: %(uuid)s] "

# The format for an instance UUID that is passed with the log message. (string value)
#instance_uuid_format = "[instance: %(uuid)s] "

# Interval, number of seconds, of log rate limiting. (integer value)
#rate_limit_interval = 0

# Maximum number of logged messages per rate_limit_interval. (integer value)
#rate_limit_burst = 0

# Log level name used by rate limiting: CRITICAL, ERROR, INFO, WARNING, DEBUG or empty string. Logs with level greater or equal to
# rate_limit_except_level are not filtered. An empty string means that all levels are filtered. (string value)
#rate_limit_except_level = CRITICAL

# Enables or disables fatal status of deprecations. (boolean value)
#fatal_deprecations = false

# The network address and optional user credentials for connecting to the messaging backend, in URL format. The expected format is:
#
# driver://[user:pass@]host:port[,[userN:passN@]hostN:portN]/virtual_host?query
#
# Example: rabbit://rabbitmq:password@127.0.0.1:5672//
#
# For full details on the fields in the URL see the documentation of oslo_messaging.TransportURL at
# https://docs.openstack.org/oslo.messaging/latest/reference/transport.html (string value)
#transport_url = <None>

transport_url = rabbit://{% for host in rabbit_hosts %}{{ octavia_rabbit_user }}:{{ octavia_rabbit_password }}@{{ hostvars[host].ip.mgmt }}:5672{% if not loop.last %},{% endif %}{% endfor %}/{{ octavia_rabbit_vhost }}


[amphora_agent]

#
# From octavia
#

# The ca which signed the client certificates (string value)
#agent_server_ca = /etc/octavia/certs/client_ca.pem

# The server certificate for the agent.py server to use (string value)
#agent_server_cert = /etc/octavia/certs/server.pem

# The directory where new network interfaces are located (string value)
#agent_server_network_dir = <None>

# The file where the network interfaces are located. Specifying this will override any value set for agent_server_network_dir. (string
# value)
#agent_server_network_file = <None>

# The time in seconds to allow a request from the controller to run before terminating the socket. (integer value)
#agent_request_read_timeout = 120

# The amphora ID. (string value)
#amphora_id = <None>

# The UDP API backend for amphora agent. (string value)
#amphora_udp_driver = keepalived_lvs


[anchor]

#
# From octavia
#

# Anchor URL (string value)
#url = http://localhost:9999/v1/sign/default

# Anchor username (string value)
#username = <None>

# Anchor password (string value)
#password = <None>


[api_settings]

#
# From octavia
#

# The host IP to bind to (IP address value)
bind_host = 127.0.0.1

# The port to bind to (port value)
# Minimum value: 0
# Maximum value: 65535
bind_port = 9876

# The auth strategy for API requests. (string value)
# Possible values:
# noauth - <No description provided>
# keystone - <No description provided>
# testing - <No description provided>
auth_strategy = keystone

# The handler that the API communicates with (string value)
#api_handler = queue_producer

# Allow the usage of pagination (boolean value)
#allow_pagination = true

# Allow the usage of sorting (boolean value)
#allow_sorting = true

# Allow the usage of filtering (boolean value)
#allow_filtering = true

# Allow the usage of field selection (boolean value)
#allow_field_selection = true

# The maximum number of items returned in a single response. The string 'infinite' or a negative integer value means 'no limit' (string
# value)
#pagination_max_limit = 1000

# Base URI for the API for use in pagination links. This will be autodetected from the request if not overridden here. (string value)
#api_base_uri = <None>

# Expose the v1 API? (boolean value)
#api_v1_enabled = true

# Expose the v2 API? (boolean value)
#api_v2_enabled = true

# Allow users to create TLS Terminated listeners? (boolean value)
#allow_tls_terminated_listeners = true

# Allow users to create PING type Health Monitors? (boolean value)
#allow_ping_health_monitors = true

# List of enabled provider drivers and description dictionaries. Must match the driver name in the octavia.api.drivers entrypoint. Example:
# {'amphora': 'The Octavia Amphora driver.', 'octavia': 'Deprecated alias of the Octavia Amphora driver.'} (dict value)
#enabled_provider_drivers = amphora:The Octavia Amphora driver.,octavia:Deprecated alias of the Octavia Amphora driver.

# Default provider driver. (string value)
#default_provider_driver = amphora

# The minimum health monitor delay interval for the UDP-CONNECT Health Monitor type. A negative integer value means 'no limit'. (integer
# value)
#udp_connect_min_interval_health_monitor = 3


[certificates]

#
# From octavia
#

# Name of the cert manager to use (string value)
#cert_manager = barbican_cert_manager

# Name of the cert generator to use (string value)
#cert_generator = local_cert_generator

# Name of the Barbican authentication method to use (string value)
#barbican_auth = barbican_acl_auth

# The name of the certificate service in the keystonecatalog (string value)
#service_name = <None>

# A new endpoint to override the endpoint in the keystone catalog. (string value)
#endpoint = <None>

# Region in Identity service catalog to use for communication with the barbican service. (string value)
#region_name = <None>

# The endpoint_type to be used for barbican service. (string value)
#endpoint_type = publicURL

# CA certificates file path (string value)
#ca_certificates_file = <None>

# Disable certificate validation on SSL connections  (boolean value)
#insecure = false


[controller_worker]

#
# From octavia
#

# Number of workers for the controller-worker service. (integer value)
# Minimum value: 1
#workers = 1
workers = {{ octavia_controller_workers }}

# Retry attempts to wait for Amphora to become active (integer value)
#amp_active_retries = 10

# Seconds to wait between checks on whether an Amphora has become active (integer value)
#amp_active_wait_sec = 10

# Nova instance flavor id for the Amphora (string value)
#amp_flavor_id =

# Glance image tag for the Amphora image to boot. Use this option to be able to update the image without reconfiguring Octavia. Ignored if
# amp_image_id is defined. (string value)
#amp_image_tag =

# DEPRECATED: Glance image id for the Amphora image to boot (string value)
# This option is deprecated for removal.
# Its value may be silently ignored in the future.
# Reason: Superseded by amp_image_tag option.
#amp_image_id =

# Restrict glance image selection to a specific owner ID.  This is a recommended security setting. (string value)
#amp_image_owner_id =

# SSH key name used to boot the Amphora (string value)
#amp_ssh_key_name =

# DEPRECATED: Determines whether or not to allow access to the Amphorae (boolean value)
# This option is deprecated for removal.
# Its value may be silently ignored in the future.
# Reason: This option and amp_ssh_key_name overlap in functionality, and only one is needed. SSH access can be enabled/disabled simply by
# setting amp_ssh_key_name, or not.
#amp_ssh_access_allowed = true

# List of networks to attach to the Amphorae. All networks defined in the list will be attached to each amphora. (list value)
#amp_boot_network_list =

# List of security groups to attach to the Amphora. (list value)
#amp_secgroup_list =

# Client CA for the amphora agent to use (string value)
#client_ca = /etc/octavia/certs/ca_01.pem

# Name of the amphora driver to use (string value)
#amphora_driver = amphora_noop_driver

# Name of the compute driver to use (string value)
#compute_driver = compute_noop_driver

# Name of the network driver to use (string value)
#network_driver = network_noop_driver

# Name of the distributor driver to use (string value)
#distributor_driver = distributor_noop_driver

# Load balancer topology configuration. SINGLE - One amphora per load balancer. ACTIVE_STANDBY - Two amphora per load balancer. (string
# value)
# Possible values:
# ACTIVE_STANDBY - <No description provided>
# SINGLE - <No description provided>
#loadbalancer_topology = SINGLE
loadbalancer_topology = {{ octavia_loadbalancer_topology }}
# If True, build cloud-init user-data that is passed to the config drive on Amphora boot instead of personality files. If False, utilize
# personality files. (boolean value)
#user_data_config_drive = false


[database]

#
# From oslo.db
#

# If True, SQLite uses synchronous mode. (boolean value)
#sqlite_synchronous = true

# The back end to use for the database. (string value)
# Deprecated group/name - [DEFAULT]/db_backend
#backend = sqlalchemy

# The SQLAlchemy connection string to use to connect to the database. (string value)
# Deprecated group/name - [DEFAULT]/sql_connection
# Deprecated group/name - [DATABASE]/sql_connection
# Deprecated group/name - [sql]/connection
#connection = <None>
connection = mysql+pymysql://{{ octavia_db_user }}:{{ octavia_db_password }}@{{ octavia_mysql_server }}/{{ octavia_db }}?charset=utf8

# The SQLAlchemy connection string to use to connect to the slave database. (string value)
#slave_connection = <None>

# The SQL mode to be used for MySQL sessions. This option, including the default, overrides any server-set SQL mode. To use whatever SQL
# mode is set by the server configuration, set this to no value. Example: mysql_sql_mode= (string value)
#mysql_sql_mode = TRADITIONAL

# If True, transparently enables support for handling MySQL Cluster (NDB). (boolean value)
#mysql_enable_ndb = false

# Connections which have been present in the connection pool longer than this number of seconds will be replaced with a new one the next
# time they are checked out from the pool. (integer value)
# Deprecated group/name - [DATABASE]/idle_timeout
# Deprecated group/name - [database]/idle_timeout
# Deprecated group/name - [DEFAULT]/sql_idle_timeout
# Deprecated group/name - [DATABASE]/sql_idle_timeout
# Deprecated group/name - [sql]/idle_timeout
#connection_recycle_time = 3600

# DEPRECATED: Minimum number of SQL connections to keep open in a pool. (integer value)
# Deprecated group/name - [DEFAULT]/sql_min_pool_size
# Deprecated group/name - [DATABASE]/sql_min_pool_size
# This option is deprecated for removal.
# Its value may be silently ignored in the future.
# Reason: The option to set the minimum pool size is not supported by sqlalchemy.
#min_pool_size = 1

# Maximum number of SQL connections to keep open in a pool. Setting a value of 0 indicates no limit. (integer value)
# Deprecated group/name - [DEFAULT]/sql_max_pool_size
# Deprecated group/name - [DATABASE]/sql_max_pool_size
#max_pool_size = 5

# Maximum number of database connection retries during startup. Set to -1 to specify an infinite retry count. (integer value)
# Deprecated group/name - [DEFAULT]/sql_max_retries
# Deprecated group/name - [DATABASE]/sql_max_retries
#max_retries = 10
max_retries = -1

# Interval between retries of opening a SQL connection. (integer value)
# Deprecated group/name - [DEFAULT]/sql_retry_interval
# Deprecated group/name - [DATABASE]/reconnect_interval
#retry_interval = 10

# If set, use this value for max_overflow with SQLAlchemy. (integer value)
# Deprecated group/name - [DEFAULT]/sql_max_overflow
# Deprecated group/name - [DATABASE]/sqlalchemy_max_overflow
#max_overflow = 50

# Verbosity of SQL debugging information: 0=None, 100=Everything. (integer value)
# Minimum value: 0
# Maximum value: 100
# Deprecated group/name - [DEFAULT]/sql_connection_debug
#connection_debug = 0

# Add Python stack traces to SQL as comment strings. (boolean value)
# Deprecated group/name - [DEFAULT]/sql_connection_trace
#connection_trace = false

# If set, use this value for pool_timeout with SQLAlchemy. (integer value)
# Deprecated group/name - [DATABASE]/sqlalchemy_pool_timeout
#pool_timeout = <None>

# Enable the experimental use of database reconnect on connection lost. (boolean value)
#use_db_reconnect = false

# Seconds between retries of a database transaction. (integer value)
#db_retry_interval = 1

# If True, increases the interval between retries of a database operation up to db_max_retry_interval. (boolean value)
#db_inc_retry_interval = true

# If db_inc_retry_interval is set, the maximum seconds between retries of a database operation. (integer value)
#db_max_retry_interval = 10

# Maximum retries in case of connection error or deadlock error before error is raised. Set to -1 to specify an infinite retry count.
# (integer value)
#db_max_retries = 20

# Optional URL parameters to append onto the connection URL at connect time; specify as param1=value1&param2=value2&... (string value)
#connection_parameters =


[glance]

#
# From octavia
#

# The name of the glance service in the keystone catalog (string value)
#service_name = <None>

# A new endpoint to override the endpoint in the keystone catalog. (string value)
#endpoint = <None>

# Region in Identity service catalog to use for communication with the OpenStack services. (string value)
#region_name = <None>

# Endpoint interface in identity service to use (string value)
#endpoint_type = publicURL

# CA certificates file path (string value)
#ca_certificates_file = <None>

# Disable certificate validation on SSL connections  (boolean value)
#insecure = false


[haproxy_amphora]

#
# From octavia
#

# Base directory for amphora files. (string value)
#base_path = /var/lib/octavia

# Base directory for cert storage. (string value)
#base_cert_dir = /var/lib/octavia/certs

# Custom haproxy template. (string value)
#haproxy_template = <None>

# Set this to False to disable connection logging. (boolean value)
#connection_logging = true

# Retry threshold for connecting to amphorae. (integer value)
#connection_max_retries = 300

# Retry timeout between connection attempts in seconds. (integer value)
#connection_retry_interval = 5

# Retry threshold for connecting to active amphorae. (integer value)
#active_connection_max_retries = 15

# Retry timeout between connection attempts in seconds for active amphora. (integer value)
#active_connection_rety_interval = 2

# Number of amphorae that could be built per controllerworker, simultaneously. (integer value)
#build_rate_limit = -1

# Retry threshold for waiting for a build slot for an amphorae. (integer value)
#build_active_retries = 300

# Retry timeout between build attempts in seconds. (integer value)
#build_retry_interval = 5

# Size of the HAProxy stick table. Accepts k, m, g suffixes.  Example: 10k (string value)
#haproxy_stick_size = 10k

# The host IP to bind to (IP address value)
#bind_host = ::

# The port to bind to (port value)
# Minimum value: 0
# Maximum value: 65535
#bind_port = 9443

# Network interface through which to reach amphora, only required if using IPv6 link local addresses. (string value)
#lb_network_interface = o-hm0

# The full path to haproxy (string value)
#haproxy_cmd = /usr/sbin/haproxy

# The respawn count for haproxy's upstart script (integer value)
#respawn_count = 2

# The respawn interval for haproxy's upstart script (integer value)
#respawn_interval = 2

# The time in seconds to wait for a REST API to connect. (floating point value)
#rest_request_conn_timeout = 10

# The time in seconds to wait for a REST API response. (floating point value)
#rest_request_read_timeout = 60

# The client certificate to talk to the agent (string value)
#client_cert = /etc/octavia/certs/client.pem

# The ca which signed the server certificates (string value)
#server_ca = /etc/octavia/certs/server_ca.pem

# DEPRECATED: If False, use sysvinit. (boolean value)
# This option is deprecated for removal.
# Its value may be silently ignored in the future.
# Reason: This is now automatically discovered  and configured.
#use_upstart = true


[health_manager]

#
# From octavia
#

# IP address the controller will listen on for heart beats (IP address value)
#bind_ip = 127.0.0.1
bind_ip = {{ ip.octavia_health_manager | default(ip.mgmt) }}

# Port number the controller will listen onfor heart beats (port value)
# Minimum value: 0
# Maximum value: 65535
#bind_port = 5555

# Number of threads performing amphora failovers. (integer value)
#failover_threads = 10

# Number of processes for amphora status update. (integer value)
#status_update_threads = <None>

# key used to validate amphora sendingthe message (string value)
#heartbeat_key = <None>

# Interval, in seconds, to wait before failing over an amphora. (integer value)
#heartbeat_timeout = 60

# Sleep time between health checks in seconds. (integer value)
#health_check_interval = 3

#  sets the value of the heartbeat recv buffer (integer value)
#sock_rlimit = 0

# List of controller ip and port pairs for the heartbeat receivers. Example 127.0.0.1:5555, 192.168.0.1:5555 (list value)
#controller_ip_port_list =

# Sleep time between sending heartbeats. (integer value)
#heartbeat_interval = 10

# Driver for updating amphora health system. (string value)
#health_update_driver = health_db

# Driver for updating amphora statistics. (string value)
#stats_update_driver = stats_db

# Specifies which driver to use for the event_streamer for syncing the octavia and neutron_lbaas dbs. If you don't need to sync the database
# or are running octavia in stand alone mode use the noop_event_streamer (string value)
#event_streamer_driver = noop_event_streamer

# Enable provisioning status sync with neutron db (boolean value)
#sync_provisioning_status = false


[house_keeping]

#
# From octavia
#

# Spare check interval in seconds (integer value)
#spare_check_interval = 30

# Number of spare amphorae (integer value)
#spare_amphora_pool_size = 0

# DB cleanup interval in seconds (integer value)
#cleanup_interval = 30

# Amphora expiry age in seconds (integer value)
#amphora_expiry_age = 604800

# Load balancer expiry age in seconds (integer value)
#load_balancer_expiry_age = 604800

# Certificate check interval in seconds (integer value)
#cert_interval = 3600

# Seconds until certificate expiration (integer value)
#cert_expiry_buffer = 1209600

# Number of threads performing amphora certificate rotation (integer value)
#cert_rotate_threads = 10


[keepalived_vrrp]

#
# From octavia
#

# Amphora role and priority advertisement interval in seconds. (integer value)
#vrrp_advert_int = 1

# VRRP health check script run interval in seconds. (integer value)
#vrrp_check_interval = 5

# Number of successive failures before transition to a fail state. (integer value)
#vrrp_fail_count = 2

# Number of consecutive successes before transition to a success state. (integer value)
#vrrp_success_count = 2

# Time in seconds between gratuitous ARP announcements from the MASTER. (integer value)
#vrrp_garp_refresh_interval = 5

# Number of gratuitous ARP announcements to make on each refresh interval. (integer value)
#vrrp_garp_refresh_count = 2


[keystone_authtoken]

auth_type = password
auth_url = {{ keystone_proto }}://{{ keystone_admin_address }}:5000/
www_authenticate_uri = {{ keystone_proto }}://{{ keystone_public_address }}:5000/v3
username = {{ octavia_admin_user }}
user_domain_name = {{ octavia_domain_name }}
password = {{ octavia_admin_password }}
project_name = {{ octavia_project_name }}
project_domain_name = {{ octavia_project_domain_name }}
{% if SSLCACertificateFile != '' %}
cafile = {{ SSLCACertificateFile }}
{% endif %}
insecure = {{ ssl_insecure }}
region_name = {{ keystone_region_name }}
service_token_roles_required = True

memcached_servers = {% for host in groups['memcached'] %}{{ hostvars[host].ip.mgmt }}:11211{% if not loop.last %},{% endif %}{% endfor %}

memcache_security_strategy = ENCRYPT
memcache_secret_key = "{{ memcache_secret_key }}"



[networking]

#
# From octavia
#

# The maximum attempts to retry an action with the networking service. (integer value)
#max_retries = 15

# Seconds to wait before retrying an action with the networking service. (integer value)
#retry_interval = 1

# Seconds to wait for a port to detach from an amphora. (integer value)
#port_detach_timeout = 300

# Can users supply a network_id for their VIP? (boolean value)
#allow_vip_network_id = true

# Can users supply a subnet_id for their VIP? (boolean value)
#allow_vip_subnet_id = true

# Can users supply a port_id for their VIP? (boolean value)
#allow_vip_port_id = true

# List of network_ids that are valid for VIP creation. If this field is empty, no validation is performed. (list value)
#valid_vip_networks = <None>

# List of IP addresses reserved from being used for member addresses. IPv6 addresses should be in expanded, uppercase form. (list value)
#reserved_ips = 169.254.169.254


[neutron]

#
# From octavia
#

# The name of the neutron service in the keystone catalog (string value)
#service_name = <None>

# A new endpoint to override the endpoint in the keystone catalog. (string value)
#endpoint = <None>

# Region in Identity service catalog to use for communication with the OpenStack services. (string value)
#region_name = <None>

# Endpoint interface in identity service to use (string value)
#endpoint_type = publicURL

# CA certificates file path (string value)
#ca_certificates_file = <None>

# Disable certificate validation on SSL connections  (boolean value)
#insecure = false


[nova]

#
# From octavia
#

# The name of the nova service in the keystone catalog (string value)
#service_name = <None>

# A new endpoint to override the endpoint in the keystone catalog. (string value)
#endpoint = <None>

# Region in Identity service catalog to use for communication with the OpenStack services. (string value)
#region_name = <None>

# Endpoint interface in identity service to use (string value)
#endpoint_type = publicURL

# CA certificates file path (string value)
#ca_certificates_file = <None>

# Disable certificate validation on SSL connections (boolean value)
#insecure = false

# Flag to indicate if nova anti-affinity feature is turned on. (boolean value)
#enable_anti_affinity = false

# Sets the anti-affinity policy for nova (string value)
# Possible values:
# anti-affinity - <No description provided>
# soft-anti-affinity - <No description provided>
#anti_affinity_policy = anti-affinity

# If non-zero, generate a random name of the length provided for each amphora, in the format "a[A-Z0-9]*". Otherwise, the default name
# format will be used: "amphora-{UUID}". (integer value)
#random_amphora_name_length = 0

# Availability zone to use for creating Amphorae (string value)
#availability_zone = <None>


[oslo_messaging]

#
# From octavia
#

# (string value)
#topic = <None>
topic = octavia

# topic name for communicating events through a queue (string value)
#event_stream_topic = neutron_lbaas_event

# Transport URL to use for the neutron-lbaassynchronization event stream when neutron and octaviahave separate queues. (string value)
#event_stream_transport_url = <None>


[oslo_messaging_notifications]


{% if octavia_notifications %}
driver = messagingv2
transport_url = rabbit://{% for host in rabbit_hosts %}{{ octavia_rabbit_user }}:{{ octavia_rabbit_password }}@{{ hostvars[host].ip.mgmt }}:5672{% if not loop.last %},{% endif %}{% endfor %}/{{ octavia_rabbit_vhost }}
{% else %}
driver =
transport_url =
{% endif %}


[oslo_messaging_rabbit]

rabbit_ha_queues = true


[quotas]

#
# From octavia
#

# Default per project load balancer quota. (integer value)
#default_load_balancer_quota = -1

# Default per project listener quota. (integer value)
#default_listener_quota = -1

# Default per project member quota. (integer value)
#default_member_quota = -1

# Default per project pool quota. (integer value)
#default_pool_quota = -1

# Default per project health monitor quota. (integer value)
#default_health_monitor_quota = -1


[service_auth]

#
# From octavia
#

# Authentication URL (string value)
#auth_url = <None>

# Authentication type to load (string value)
# Deprecated group/name - [service_auth]/auth_plugin
#auth_type = <None>

# PEM encoded Certificate Authority to use when verifying HTTPs connections. (string value)
#cafile = <None>

# PEM encoded client certificate cert file (string value)
#certfile = <None>

# Collect per-API call timing information. (boolean value)
#collect_timing = false

# Optional domain ID to use with v3 and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2
# authentication. (string value)
#default_domain_id = <None>

# Optional domain name to use with v3 API and v2 parameters. It will be used for both the user and project domain in v3 and ignored in v2
# authentication. (string value)
#default_domain_name = <None>

# Domain ID to scope to (string value)
#domain_id = <None>

# Domain name to scope to (string value)
#domain_name = <None>

# Verify HTTPS connections. (boolean value)
#insecure = false

# PEM encoded client certificate key file (string value)
#keyfile = <None>

# User's password (string value)
#password = <None>

# Domain ID containing project (string value)
#project_domain_id = <None>

# Domain name containing project (string value)
#project_domain_name = <None>

# Project ID to scope to (string value)
# Deprecated group/name - [service_auth]/tenant_id
#project_id = <None>

# Project name to scope to (string value)
# Deprecated group/name - [service_auth]/tenant_name
#project_name = <None>

# Log requests to multiple loggers. (boolean value)
#split_loggers = false

# Scope for system operations (string value)
#system_scope = <None>

# Tenant ID (string value)
#tenant_id = <None>

# Tenant Name (string value)
#tenant_name = <None>

# Timeout value for http requests (integer value)
#timeout = <None>

# Trust ID (string value)
#trust_id = <None>

# User's domain id (string value)
#user_domain_id = <None>

# User's domain name (string value)
#user_domain_name = <None>

# User id (string value)
#user_id = <None>

# Username (string value)
# Deprecated group/name - [service_auth]/user_name
#username = <None>


[task_flow]

#
# From octavia
#

# TaskFlow engine to use (string value)
#engine = serial

# The maximum number of workers (integer value)
#max_workers = 5

# If True, disables the controller worker taskflow flows from reverting.  This will leave resources in an inconsistent state and should only
# be used for debugging purposes. (boolean value)
#disable_revert = false
