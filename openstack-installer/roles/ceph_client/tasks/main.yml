---

- name: ensure /etc/ceph exists
  file: path=/etc/ceph state=directory owner=root group=root mode=0755

- name: generate ceph config file
  ini_file: dest=/etc/ceph/{{ item[0].cluster_name | default('ceph') }}.conf
    section=global
    option="{{ item[1].keys()[0] }}"
    value="{{ item[1].values()[0] }}"
  with_nested:
    - "{{ ceph_users }}"
    - [ { "auth cluster required": "cephx" },
        { "auth service required": "cephx" },
        { "auth client required": "cephx" },
        { "cephx require signatures": "true" } ]

- name: set monitors
  ini_file: dest=/etc/ceph/{{ item.cluster_name | default('ceph') }}.conf
    section=global
    option="mon host"
    value="{% for host in item.monitors %}{% if host in hostvars %}{{ hostvars[host].ip.mgmt }}{% else %}{{ host }}{% endif %}{% if not loop.last %},{% endif %}{% endfor %}"
  with_items: "{{ ceph_users }}"

- name: set default rbd features
  ini_file: dest=/etc/ceph/{{ item.cluster_name | default('ceph') }}.conf
    section=global
    option="rbd default features"
    value="{{ ceph_rbd_default_features | default('') }}"
    state={{ ceph_rbd_default_features is defined | ternary('present','absent') }}
  with_items: "{{ ceph_users }}"

- name: create ceph user
  command: "ceph --cluster {{ item.cluster_name | default('ceph') }} auth get-or-create client.{{ item.user }} {{ item.rights }}"
  register: ceph_auth
  delegate_to: "{{ item.monitors[0] }}"
  run_once: True
  with_items: "{{ ceph_users }}"
  when: not item.key

- name: write out ceph keyring (created key)
  copy: content='{{ item.stdout }}\n' dest=/etc/ceph/{{ item.item.cluster_name }}.client.{{ item.item.user}}.keyring
        owner={{ item.item.keyring_owner | default('root') }} group={{ item.item.keyring_group | default('root') }} mode=0440
  with_items: "{{ ceph_auth.results }}"
  when: item.item.keyring_owner is defined and not item.item.key

- name: write out ceph keyring (predefined key)
  copy: content="[client.{{ item.user }}]\n\tkey = {{ item.key }}\n"
        dest=/etc/ceph/{{ item.cluster_name | default('ceph') }}.client.{{ item.user }}.keyring
        owner={{ item.keyring_owner | default('root') }} group={{ item.keyring_group | default('root') }} mode=0440
  with_items: "{{ ceph_users }}"
  when: item.keyring_owner is defined and item.key
