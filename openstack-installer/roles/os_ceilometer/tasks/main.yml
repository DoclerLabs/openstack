---

- name: create ceilometer vhost in rabbitmq
  rabbitmq_vhost: node="rabbit@{{ groups['rabbitmq'][0] }}" name="{{ ceilometer_rabbit_vhost }}"
  delegate_to: "{{ groups['rabbitmq'][0] }}"
  run_once: True

- name: create ceilometer user in rabbitmq
  rabbitmq_user: node="rabbit@{{ groups['rabbitmq'][0] }}"
      user="{{ ceilometer_rabbit_user }}" password="{{ ceilometer_rabbit_password }}"
      vhost="{{ ceilometer_rabbit_vhost }}"
      configure_priv=".*" read_priv=".*" write_priv=".*"
  delegate_to: "{{ groups['rabbitmq'][0] }}"
  run_once: True

- name: ensure the ceilometer vhost contains the HA policy
  rabbitmq_policy:
    node: "rabbit@{{ groups['rabbitmq'][0] }}"
    vhost: "{{ ceilometer_rabbit_vhost }}"
    name: HA
    pattern: '.*'
    tags:
      "ha-mode": "all"
      "ha-sync-mode": "automatic"
  delegate_to: "{{ groups['rabbitmq'][0] }}"
  run_once: True

- name: install CA certificate
  copy: src="{{ SSLCACertificateFileSource }}" dest="{{ SSLCACertificateFile }}" owner=root group=root mode=0644
  when: SSLCACertificateFile != ''

- name: mask autostarting of ceilometer controller services
  service_mask: name={{ item }} state=masked
  with_items:
    - ceilometer-collector
    - ceilometer-agent-central
    - ceilometer-agent-notification
  when: inventory_hostname in groups['ceilometer_controller']

- name: ensure ceilometer-api and collector are not installed
  apt: name={{ item }} state=absent
  with_items:
    - ceilometer-api
    - ceilometer-collector
  when: inventory_hostname in groups['ceilometer_controller']

- name: mask autostarting of ceilometer compute services
  service_mask: name={{ item }} state=masked
  with_items:
    - ceilometer-agent-compute
  when: inventory_hostname in groups['ceilometer_compute']

- name: install ceilometer controller services
  apt: name={{ item }}
  with_items:
    - ceilometer-agent-central
    - ceilometer-agent-notification
    - python-ceilometerclient
    - python-gnocchiclient
  when: inventory_hostname in groups['ceilometer_controller']

- name: install ceilometer compute services
  apt: name={{ item }}
  with_items:
    - ceilometer-agent-compute
  when: inventory_hostname in groups['ceilometer_compute']

- name: install ceilometer configs
  template: src=ceilometer.conf.j2 dest=/etc/ceilometer/ceilometer.conf owner=ceilometer group=root mode=0460
  notify:
    - restart ceilometer controller services
    - restart ceilometer compute services

- name: install yaml files
  copy: src={{ item }}.yaml dest=/etc/ceilometer/{{ item }}.yaml owner=root group=root mode=0644
  when: inventory_hostname in groups['ceilometer_controller']
  with_items:
    - event_definitions
    - gnocchi_resources
  notify:
    - restart ceilometer controller services

- name: install pipeline definitions
  copy: src={{ item.src }} dest=/etc/ceilometer/{{ item.dest }} owner=root group=root mode=0644
  with_items:
    - { src: "{{ ceilometer_event_pipeline_src }}", dest: "event_pipeline.yaml" }
    - { src: "{{ ceilometer_pipeline_src }}", dest: "pipeline.yaml" }
    - { src: "{{ ceilometer_polling_src }}", dest: "polling.yaml" }
  notify:
    - restart ceilometer controller services
    - restart ceilometer compute services

- name: unmask autostarting of ceilometer controller services
  service_mask: name={{ item }} state=unmasked
  with_items:
    - ceilometer-collector
    - ceilometer-agent-central
    - ceilometer-agent-notification
  when: inventory_hostname in groups['ceilometer_controller']

- name: unmask autostarting of ceilometer compute services
  service_mask: name={{ item }} state=unmasked
  with_items:
    - ceilometer-agent-compute
  when: inventory_hostname in groups['ceilometer_compute']

- meta: flush_handlers

- name: ensure ceilometer controller services are started
  service: name={{ item }} state=started enabled=yes
  with_items:
    - ceilometer-agent-central
    - ceilometer-agent-notification
  when: inventory_hostname in groups['ceilometer_controller']

- name: ensure ceilometer-agent-compute is started
  service: name={{ item }} state=started enabled=yes
  with_items:
    - ceilometer-agent-compute
  when: inventory_hostname in groups['ceilometer_compute']
