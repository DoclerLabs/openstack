---

- name: restart neutron-server
  service: name=neutron-server state=restarted
  when: inventory_hostname in groups['neutron_controller']

- name: restart neutron-l3-agent
  # service: name=neutron-l3-agent state=restarted
  # simulate serial:1 in the restart handler, don't restart all of the l3 agents simultaneously
  shell: sleep $((10*{{ groups['neutron_l3'].index(inventory_hostname) }})) &&
         /usr/sbin/service neutron-l3-agent restart
  when: inventory_hostname in groups['neutron_l3']

- name: restart neutron-dhcp-agent
  service: name=neutron-dhcp-agent state=restarted
  when: inventory_hostname in groups['neutron_l3']

- name: restart neutron-metadata-agent
  service: name=neutron-metadata-agent state=restarted
  when: inventory_hostname in groups['neutron_l3']

- name: restart neutron-lbaas-agent
  service: name=neutron-{{ neutron_lbaas_agent }}-agent state=restarted
  when: inventory_hostname in groups['neutron_l3']

- name: restart neutron-l2-agent
  service: name="neutron-{{ item }}-agent" state=restarted
  with_items: "{{ neutron_physical_interface_drivers }}"
  when: inventory_hostname in groups['neutron_l2']

- name: reload sysctl
  command: /sbin/sysctl --system

- name: reload apparmor
  service: name=apparmor state=reloaded
