---

- name: ensure apache2 is installed
  apt: name={{ item }}
  with_items:
    - apache2
    - libapache2-mod-wsgi

- name: ensure apache2 is started
  service: name=apache2 state=started enabled=yes

- name: install certificates
  copy: src={{ item.src }} dest={{ item.dest }} owner=www-data group=root mode={{ item.mode }}
  with_items:
    - { src: '{{ SSLCertificateKeyFileSource | default("") }}', dest: '{{ SSLCertificateKeyFile }}', mode: '0460' }
    - { src: '{{ SSLCertificateFileSource | default("") }}', dest: '{{ SSLCertificateFile }}', mode: '0464' }
  when: item.src != ''
  notify: reload apache

- name: enable mod_ssl
  file: src=../mods-available/ssl.load dest=/etc/apache2/mods-enabled/ssl.load state=link
  when: SSLCertificateKeyFileSource is defined
  notify: reload apache

- name: enable apache modules
  file: src=../mods-available/{{ item }}.load dest=/etc/apache2/mods-enabled/{{ item }}.load state=link
  with_items:
    - rewrite
    - proxy
    - proxy_fcgi
    - proxy_http
  notify: reload apache

- name: install site.conf
  template: src=proxy-site.conf.j2 dest=/etc/apache2/sites-available/{{ apache_service_name }}-site.conf owner=root group=root mode=0644
  notify: reload apache

- name: enable site
  file: src=../sites-available/{{ apache_service_name }}-site.conf dest=/etc/apache2/sites-enabled/{{ apache_service_name }}-site.conf state=link
  notify: reload apache

- name: remove reload signal
  file: dest=/run/apache2.reload state=absent
  notify: reload apache
