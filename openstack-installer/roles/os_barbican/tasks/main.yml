---

- name: create barbican vhost in rabbitmq
  rabbitmq_vhost: node="rabbit@{{ groups['rabbitmq'][0] }}" name="{{ barbican_rabbit_vhost }}"
  delegate_to: "{{ groups['rabbitmq'][0] }}"
  run_once: True

- name: create barbican user in rabbitmq
  rabbitmq_user: node="rabbit@{{ groups['rabbitmq'][0] }}"
      user="{{ barbican_rabbit_user }}" password="{{ barbican_rabbit_password }}"
      vhost="{{ barbican_rabbit_vhost }}"
      configure_priv=".*" read_priv=".*" write_priv=".*"
  delegate_to: "{{ groups['rabbitmq'][0] }}"
  run_once: True

- name: ensure the barbican vhost contains the HA policy
  rabbitmq_policy:
    node: "rabbit@{{ groups['rabbitmq'][0] }}"
    vhost: "{{ barbican_rabbit_vhost }}"
    name: HA
    pattern: '.*'
    tags:
      "ha-mode": "all"
      "ha-sync-mode": "automatic"
  delegate_to: "{{ groups['rabbitmq'][0] }}"
  run_once: True

- name: mask autostarting of barbican
  service_mask: name={{ item }} state=masked
  with_items:
    - barbican-worker

- name: mask barbican-api apache config
  copy: content='' dest=/etc/apache2/conf-available/barbican-api.conf owner=root group=root mode=0644

- name: install barbican
  apt:
    name:
    - barbican-api
    - barbican-worker
    - python3-barbican
    - python3-barbicanclient

- name: ensure python-barbican is not installed
  apt: name=python-barbican state=absent

- name: create barbican database
  mysql_db: name={{ barbican_db }}
    login_host={{ barbican_mysql_server }} login_user=root login_password={{ mysql_root_password }}
    state=present
  run_once: True

- name: create barbican database user
  mysql_user: name={{ barbican_db_user }} password={{ barbican_db_password }} host={{ item }} priv={{ barbican_db }}.*:ALL
    login_host={{ barbican_mysql_server }} login_user=root login_password={{ mysql_root_password }}
    state=present
  run_once: True
  with_items:
    - localhost
    - '%'

- name: ensure /var/lib/barbican/cache is writeable
  file: path=/var/lib/barbican/cache state=directory owner=barbican group=barbican mode=0700
  notify: signal apache to reload

- name: install barbican config
  template: src=barbican.conf.j2 dest=/etc/barbican/barbican.conf owner=barbican group=root mode=0460
  notify:
    - restart barbican-worker
    - signal apache to reload

- name: install barbican-api-paste.ini
  copy: src=barbican-api-paste.ini dest=/etc/barbican/barbican-api-paste.ini owner=barbican group=root mode=0460
  notify: signal apache to reload

- name: sync barbican db
  command: su barbican -s /bin/sh -c 'barbican-manage db upgrade'
  register: db_sync
  changed_when: '"Running upgrade" in db_sync.stderr'
  run_once: True

- name: create /var/www/cgi-bin/barbican
  file: path=/var/www/cgi-bin/barbican state=directory owner=root group=root mode=0755
  notify: signal apache to reload

- name: link barbican-wsgi server
  file: src=/usr/share/barbican/app.wsgi dest=/var/www/cgi-bin/barbican/barbican-api state=link force=yes
  notify: signal apache to reload

- name: unmask autostarting of barbican
  service_mask: name={{ item }} state=unmasked
  with_items:
    - barbican-worker

- meta: flush_handlers

- name: ensure barbican-worker is started
  service: name=barbican-worker state=started enabled=yes
