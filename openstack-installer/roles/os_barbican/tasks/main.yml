---

- name: create barbican user in rabbitmq
  rabbitmq_user: user="{{ barbican_rabbit_user }}" password="{{ barbican_rabbit_password }}" configure_priv=".*" read_priv=".*" write_priv=".*"
  delegate_to: "{{ groups['rabbitmq'][0] }}"
  run_once: True

- name: disable autostarting of barbican
  copy: content='manual' dest=/etc/init/{{ item }}.override owner=root group=root mode=0644 force=no
  with_items:
    - barbican-api
    - barbican-worker

- name: install barbican
  apt: name={{ item }}
  with_items:
    - barbican-api
    - barbican-worker
    - python-barbicanclient

- name: create barbican database
  mysql_db: name={{ barbican_db }}
    login_host={{ barbican_mysql_server }} login_user=root login_password={{ mysql_root_password }}
    state=present
  run_once: True

- name: create barbican database user
  mysql_user: name={{ barbican_db_user }} password={{ barbican_db_password }} host={{ item }} priv={{ barbican_db }}.*:ALL
    login_host={{ barbican_mysql_server }} login_user=root login_password={{ mysql_root_password }}
    state=present
  run_once: True
  with_items:
    - localhost
    - '%'

- name: ensure /var/lib/barbican/cache is writeable
  file: path=/var/lib/barbican/cache state=directory owner=barbican group=barbican mode=0700
  notify: restart barbican

- name: install barbican configs
  template: src={{ item }}.j2 dest=/etc/barbican/{{ item }} owner=barbican group=root mode=0460
  with_items:
    - barbican.conf
    - barbican-api-paste.ini
  notify: restart barbican

- name: set listening address of barbican-api
  ini_file: dest=/etc/barbican/vassals/barbican-api.ini section=uwsgi option=socket value="{{ ip.mgmt }}:9311"
  notify: restart barbican

- name: sync barbican db
  command: su barbican -s /bin/sh -c 'barbican-db-manage upgrade'
  run_once: True

- meta: flush_handlers

- name: ensure barbican is started
  service: name={{ item }} state=started enabled=yes
  with_items:
    - barbican-api
    - barbican-worker
