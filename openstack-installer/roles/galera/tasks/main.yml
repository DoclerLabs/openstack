---

- name: ensure mysql group exists
  group: name=mysql system=yes

- name: ensure mysql user exists
  user: name=mysql comment="MySQL Server" group=mysql home={{ mysql_datadir }} createhome=no shell=/bin/false system=yes

- name: ensure MySQL datadir exists
  file: dest={{ mysql_datadir }} owner=mysql group=mysql mode=0750 state=directory

- name: install galera packages
  apt:
    name:
    - percona-xtrabackup-24
    - percona-xtradb-cluster-server-5.7
    - percona-xtradb-cluster-galera-3
    - socat
    - xinetd
    - python3-mysqldb

- name: list pacemaker resources
  command: crm_resource --list
  register: crm_resource_list
  changed_when: False

- name: check if galera is already configured
  command: grep -q wsrep_cluster_address /etc/mysql/percona-xtradb-cluster.conf.d/wsrep.cnf
  register: galera_stat
  failed_when: False
  changed_when: False

- name: stop mysql if it is not configured yet
  service: name=mysql state=stopped
  when: galera_stat.rc != 1

- name: install mysqld.cnf
  template: src=mysqld.cnf.j2 dest=/etc/mysql/percona-xtradb-cluster.conf.d/mysqld.cnf owner=mysql group=root mode=0460

- name: ensure link to /etc/alternatives/my.cnf
  file: src=/etc/alternatives/my.cnf path=/etc/mysql/my.cnf state=link force=yes

- name: ensure the alternatives system uses percona-xtradb-cluster.cnf
  alternatives: name=my.cnf path=/etc/mysql/percona-xtradb-cluster.cnf

- name: ensure mysql is running if not configured yet
  service: name=mysql state=started
  when: galera_stat.rc != 1

- name: set up mysql root password
  mysql_user: name=root host="{{ item }}" password="{{ mysql_root_password }}" priv=*.*:ALL,GRANT
    login_user=root login_password="{{ mysql_root_password }}" check_implicit_admin=yes
  with_items:
    - localhost
    - 127.0.0.1
    - '%'
  when: galera_stat.rc != 1

- name: create wsrep user
  mysql_user: name=wsrep password={{ galera_wsrep_password }} priv=*.*:ALL
    login_user=root login_password={{ mysql_root_password }}
  when: galera_stat.rc != 1

- name: create clustercheck user
  mysql_user: name=clustercheck password={{ galera_clustercheck_password }} priv=*.*:USAGE
    login_user=root login_password={{ mysql_root_password }}
  when: galera_stat.rc != 1

- name: stop mysql if it is not configured yet
  service: name=mysql state=stopped
  when: galera_stat.rc != 1

- name: install wsrep.cnf
  template: src=wsrep.cnf.j2 dest=/etc/mysql/percona-xtradb-cluster.conf.d/wsrep.cnf owner=mysql group=root mode=0460
  notify: cleanup galera resource

- name: install /etc/my.cnf
  template: src=root.my.cnf.j2 dest=/etc/my.cnf owner=root group=root mode=0640

- name: install galera OCF script
  copy: src=galera-agent dest=/usr/lib/ocf/resource.d/heartbeat/galera-agent owner=root group=root mode=0755
  notify: cleanup galera resource

- name: create shadow CIB database
  command: crm_shadow --create shadowcib -b --force
  changed_when: False
  run_once: True

- name: install pacemaker galera service
  pacemaker:
    action: primitive
    name: p_galera
    params:
      type: ocf:heartbeat:galera-agent
      meta:
        target-role: Started
      op:
        start:
          timeout: "120"
          interval: "0"
        stop:
          timeout: "120"
          interval: "0"
        promote:
           timeout: "300"
           interval: "0"
        demote:
           timeout: "120"
           interval: "0"
        monitor:
           role: "Master"
           interval: "20"
        monitor1:
           role: "Slave"
           interval: "30"

      params:
        check_user: "clustercheck"
        wsrep_cluster_address: "gcomm://{% for host in groups['galera'] %}{{ host }}{% if not loop.last %},{% endif %}{% endfor %}"
        binary: "/usr/sbin/mysqld"
        config: "/etc/mysql/my.cnf"
        socket: "{{ mysql_sock_file }}"
        datadir: "{{ mysql_datadir }}"
        pid: "{{ mysql_pid_file }}"
        log: "{{ mysql_log_error }}"
    shadow: shadowcib
  notify: commit shadow cib
  run_once: True

- name: install Master-Slave galera pacemaker service
  pacemaker:
    action: ms
    name: ms_galera
    params:
      rsc: p_galera
      meta:
         target-role: Started
         master-max: "{{ groups['galera'] | length }}"
    shadow: shadowcib
  notify: commit shadow cib
  run_once: True

- meta: flush_handlers

- name: delete the shadow CIB
  command: crm_shadow --delete shadowcib --force
  changed_when: False
  run_once: True

- name: make sure /etc/default/clustercheck is not present
  file: path=/etc/default/clustercheck state=absent

- name: wait for the mysql servers to start
  wait_for: host={{ ip.mgmt }} port=3306

- name: wait until the replication is finished
  command: mysql -nNs --user=clustercheck -e 'show status like "wsrep_cluster_status"'
  changed_when: False
  register: mysql_result
  retries: 20
  delay: 10
  until: "'Primary' in mysql_result.stdout"

- name: make sure mysql is disabled at boot
  service: name=mysql enabled=no

- name: add mysqlchk to /etc/services
  lineinfile: dest=/etc/services 
    regexp='^mysqlchk'
    line='mysqlchk 9200/tcp'
  notify: restart xinetd

- name: configure xinetd to serve clustercheck
  template: src=mysqlchk.j2 dest=/etc/xinetd.d/mysqlchk owner=root group=root mode=640
  notify: restart xinetd

- name: ensure xinetd is running
  service: name=xinetd state=started enabled=yes

- name: install rsyslog galera.conf
  template: src=40-galera.conf.j2 dest=/etc/rsyslog.d/40-galera.conf owner=root group=root mode=0644
  when: inventory_hostname in groups['rsyslog']
  notify:
    - restart rsyslog
