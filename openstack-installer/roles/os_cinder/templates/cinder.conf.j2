{% set host_index = groups[(inventory_hostname in groups['cinder']) | ternary('cinder', 'cinder_volume')].index(inventory_hostname) % groups['rabbitmq'] | count %}
{% set rabbit_hosts = groups['rabbitmq'][host_index:] + groups['rabbitmq'][:host_index] %}
[DEFAULT]

debug = {{ cinder_debug }}
use_stderr = False
use_syslog = {{ cinder_syslog_use }}
log_dir = /var/log/cinder

my_ip = {{ ip.mgmt }}
osapi_volume_listen = 127.0.0.1
osapi_volume_base_URL = {{ os_proto }}://{{ os_public_address }}:8776
public_endpoint = {{ os_proto }}://{{ os_public_address }}:8776
backend_host = {{ inventory_hostname }}
host = {{ inventory_hostname }}
{% if cinder_cluster_name %}
cluster = {{ cinder_cluster_name }}
{% endif %}

rootwrap_config = /etc/cinder/rootwrap.conf
api_paste_config = /etc/cinder/api-paste.ini
state_path = /var/lib/cinder
volumes_dir = /var/lib/cinder/volumes
allow_availability_zone_fallback = True

enable_v2_api = True
enable_v3_api = True

auth_strategy = keystone
transport_url = rabbit://{% for host in rabbit_hosts %}{{ cinder_rabbit_user }}:{{ cinder_rabbit_password }}@{{ hostvars[host].ip.mgmt }}:5672{% if not loop.last %},{% endif %}{% endfor %}/{{ cinder_rabbit_vhost }}

glance_api_servers = {{ os_proto }}://{{ os_internal_address }}:9292
glance_api_insecure = {{ ssl_insecure }}
{% if SSLCACertificateFile != '' %}
glance_ca_certificates_file = {{ SSLCACertificateFile }}
{% endif %}

scheduler_default_filters = {{ cinder_scheduler_default_filters }}
scheduler_default_weighers = {{ cinder_scheduler_default_weighers }}

{% if inventory_hostname in groups['cinder_volume'] %}

{% if cinder_backup_backend == 'posix' %}

backup_driver = cinder.backup.drivers.posix.PosixBackupDriver

{% elif cinder_backup_backend == 'ceph' %}

backup_driver = cinder.backup.drivers.ceph.CephBackupDriver
backup_ceph_conf = /etc/ceph/{{ cinder_backup_ceph_cluster_name }}.conf
backup_ceph_pool = {{ cinder_backup_ceph_pool }}
backup_ceph_user = {{ cinder_backup_ceph_user }}

{% elif cinder_backup_backend == 'swift' %}

backup_driver = cinder.backup.drivers.swift.SwiftBackupDriver
backup_swift_auth_url = {{ keystone_proto }}://{{ keystone_public_address }}:5000
{% if SSLCACertificateFile != '' %}
backup_swift_ca_cert_file = {{ SSLCACertificateFile }}
{% endif %}
backup_swift_auth_insecure = {{ ssl_insecure }}
backup_swift_container = {{ cinder_backup_swift_container }}

{% endif %}

enabled_backends = {% for backend in cinder_backends %}{{ backend.name }}{% if not loop.last %},{% endif %}{% endfor %}

{% for backend in cinder_backends %}

[{{ backend.name }}]

{% if backend.backend == 'lvm' %}

volume_driver = cinder.volume.drivers.lvm.LVMVolumeDriver
volume_group = {{ backend.volume_group | default(cinder_volume_group) }}
iscsi_protocol = iscsi
iscsi_helper = {{ cinder_iscsi_helper }}
volume_name_template = volume-%s
lvm_type = {{ backend.lvm_type | default(cinder_lvm_type) }}

{% elif backend.backend == 'ceph' %}

volume_driver=cinder.volume.drivers.rbd.RBDDriver
rbd_cluster_name = {{ backend.ceph_cluster_name }}
rbd_ceph_conf = /etc/ceph/{{ backend.ceph_cluster_name }}.conf
rbd_pool = {{ backend.ceph_pool }}
rbd_user = {{ backend.ceph_user }}
rbd_secret_uuid = {{ backend.volume_secret_uuid }}

{% endif %}
volume_backend_name = {{ backend.name }}

{% endfor %}

{% endif %}

{% if groups['zookeeper'] | count > 0 %}
[coordination]

backend_url = kazoo://{% for host in groups['zookeeper'] %}{{ hostvars[host].ip.mgmt }}:2181{% if not loop.last %},{% endif %}{% endfor %}
{% endif %}


[database]

connection = mysql+pymysql://{{ cinder_db_user }}:{{ cinder_db_password }}@{{ cinder_mysql_server }}/{{ cinder_db }}?charset=utf8
max_retries = -1

{% if groups['barbican'] | count > 0 %}

[key_manager]

backend = castellan.key_manager.barbican_key_manager.BarbicanKeyManager


[barbican]

auth_endpoint = {{ keystone_proto }}://{{ keystone_public_address }}:5000/v3
verify_ssl = {{ not ssl_insecure }}

{% else %}

[key_manager]

backend = cinder.keymgr.conf_key_mgr.ConfKeyManager

{% endif %}


[nova]

insecure = {{ ssl_insecure }}
{% if SSLCACertificateFile != '' %}
cafile = {{ SSLCACertificateFile }}
{% endif %}
auth_type = password
auth_url = {{ keystone_proto }}://{{ keystone_admin_address }}:5000
token_auth_url = {{ keystone_proto }}://{{ keystone_public_address }}:5000
region_name = {{ keystone_region_name }}
user_domain_name = {{ nova_domain_name }}
username = {{ nova_admin_user }}
password = {{ nova_admin_password }}
project_domain_name = {{ nova_project_domain_name }}
project_name = {{ nova_project_name }}


[keystone_authtoken]

insecure = {{ ssl_insecure }}
{% if SSLCACertificateFile != '' %}
cafile = {{ SSLCACertificateFile }}
{% endif %}
auth_type = password
auth_url = {{ keystone_proto }}://{{ keystone_admin_address }}:5000
www_authenticate_uri = {{ keystone_proto }}://{{ keystone_public_address }}:5000
region_name = {{ keystone_region_name }}
user_domain_name = {{ cinder_domain_name }}
username = {{ cinder_admin_user }}
password = {{ cinder_admin_password }}
project_domain_name = {{ cinder_project_domain_name }}
project_name = {{ cinder_project_name }}
service_token_roles_required = True

memcached_servers = {% for host in groups['memcached'] %}{{ hostvars[host].ip.mgmt }}:11211{% if not loop.last %},{% endif %}{% endfor %}

memcache_security_strategy = ENCRYPT
memcache_secret_key = {{ memcache_secret_key }}


[oslo_concurrency]

lock_path = /var/lock/cinder


[oslo_messaging_notifications]

{% if cinder_notifications %}
driver = messagingv2
transport_url = rabbit://{% for host in rabbit_hosts %}{{ cinder_rabbit_user }}:{{ cinder_rabbit_password }}@{{ hostvars[host].ip.mgmt }}:5672{% if not loop.last %},{% endif %}{% endfor %}/{{ cinder_rabbit_vhost }}
{% else %}
driver =
transport_url =
{% endif %}


[oslo_messaging_rabbit]

rabbit_ha_queues = true
