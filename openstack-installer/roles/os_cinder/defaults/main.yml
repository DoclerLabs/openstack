---

cinder_db_user: cinder
cinder_mysql_server: "{{ vip_mgmt }}"
cinder_db: cinder
cinder_rabbit_vhost: cinder
cinder_rabbit_user: cinder
cinder_admin_user: cinder
cinder_domain_name: "{{ keystone_domain_name }}"
cinder_project_domain_name: "{{ keystone_service_project_domain_name | default(keystone_domain_name) }}"
cinder_project_name: "{{ keystone_service_project_name | default('service') }}"

nova_admin_user: nova
nova_domain_name: "{{ keystone_domain_name }}"
nova_project_domain_name: "{{ keystone_service_project_domain_name | default(keystone_domain_name) }}"
nova_project_name: "{{ keystone_service_project_name | default('service') }}"

ceph_cluster_name: ceph

cinder_cluster_name:

cinder_backend: lvm
cinder_volume_group: cinder-volumes
cinder_lvm_type: default
cinder_ceph_pool: volumes
cinder_ceph_user: cinder
cinder_volume_secret_uuid:
cinder_iscsi_helper: tgtadm

cinder_backup_backend: posix
cinder_backup_swift_container: volumebackups
cinder_backup_ceph_pool: backups
cinder_backup_ceph_user: cinder-backup
cinder_backup_ceph_cluster_name: "{{ ceph_cluster_name }}"

#convert cinder flat variables to the multi-backend format
cinder_backends:
  - backend: "{{ cinder_backend }}"
    volume_group: "{{ cinder_volume_group }}"
    name: "{{ cinder_backend }}-1"
    ceph_cluster_name: "{{ ceph_cluster_name }}"
    ceph_pool: "{{ cinder_ceph_pool }}"
    ceph_user: "{{ cinder_ceph_user }}"
    volume_secret_uuid: "{{ cinder_volume_secret_uuid }}"

cinder_scheduler_default_filters: "AvailabilityZoneFilter, CapacityFilter, CapabilitiesFilter"
cinder_scheduler_default_weighers: "CapacityWeigher"

cinder_notifications: "{{ notifications_enable | default(False) }}"

cinder_syslog_use: "{{ syslog_use | default(False) }}"

cinder_enforce_scope: "{{ enforce_scope | default(False) }}"
cinder_enforce_new_defaults: "{{ enforce_scope | default(False) }}"

cinder_debug: False

keystone_proto: "{{ (keystone_ssl | default(False)) | ternary('https', 'http') }}"
os_proto: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}"
ssl_insecure: False
SSLCACertificateFileSource:
SSLCACertificateFile: "{{ (SSLCACertificateFileSource is not none and SSLCACertificateFileSource | trim != '') | ternary('/etc/ssl/certs/openstack.ca.crt','') }}"
