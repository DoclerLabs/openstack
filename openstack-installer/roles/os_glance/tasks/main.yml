---

- name: create glance vhost in rabbitmq
  rabbitmq_vhost: node="rabbit@{{ groups['rabbitmq'][0] }}" name="{{ glance_rabbit_vhost }}"
  delegate_to: "{{ groups['rabbitmq'][0] }}"
  run_once: True

- name: create glance user in rabbitmq
  rabbitmq_user: node="rabbit@{{ groups['rabbitmq'][0] }}"
      user="{{ glance_rabbit_user }}" password="{{ glance_rabbit_password }}"
      vhost="{{ glance_rabbit_vhost }}"
      configure_priv=".*" read_priv=".*" write_priv=".*"
  delegate_to: "{{ groups['rabbitmq'][0] }}"
  run_once: True

- name: ensure the glance vhost contains the HA policy
  rabbitmq_policy:
    node: "rabbit@{{ groups['rabbitmq'][0] }}"
    vhost: "{{ glance_rabbit_vhost }}"
    name: HA
    pattern: '.*'
    tags:
      "ha-mode": "all"
      "ha-sync-mode": "automatic"
  delegate_to: "{{ groups['rabbitmq'][0] }}"
  run_once: True

- name: install CA certificate
  copy: src="{{ SSLCACertificateFileSource }}" dest="{{ SSLCACertificateFile }}" owner=root group=root mode=0644
  when: SSLCACertificateFile != ''

- name: disable autostarting of glance
  copy: content='manual' dest=/etc/init/{{ item }}.override owner=root group=root mode=0644 force=no
  with_items:
    - glance-api
    - glance-registry

- name: install glance
  apt: name={{ item }}
  with_items:
    - python-rbd
    - python-rados
    - glance
    - python-glanceclient
    - python-swiftclient

- name: create glance database
  mysql_db: name={{ glance_db }}
    login_host={{ glance_mysql_server }} login_user=root login_password={{ mysql_root_password }}
    state=present
  run_once: True

- name: create glance database user
  mysql_user: name={{ glance_db_user }} password={{ glance_db_password }} host={{ item }} priv={{ glance_db }}.*:ALL
    login_host={{ glance_mysql_server }} login_user=root login_password={{ mysql_root_password }}
    state=present
  run_once: True
  with_items:
    - localhost
    - '%'

- name: install glance configs
  template: src={{ item }}.conf.j2 dest=/etc/glance/{{ item }}.conf owner=glance group=root mode=0460
  with_items:
    - glance-api
    - glance-registry
  notify: restart glance

- name: sync glance db
  command: su glance -s /bin/sh -c "/usr/bin/glance-manage db_sync"
  register: db_sync
  changed_when: '"migrate.versioning.api" in db_sync.stderr'
  run_once: True

- meta: flush_handlers

- name: ensure glance is started
  service: name={{ item }} state=started enabled=yes
  with_items:
    - glance-api
    - glance-registry
