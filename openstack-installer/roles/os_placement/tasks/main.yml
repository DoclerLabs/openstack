---

- name: install CA certificate
  copy: src="{{ SSLCACertificateFileSource }}" dest="{{ SSLCACertificateFile }}" owner=root group=root mode=0644
  when: SSLCACertificateFile != ''

- name: mask placement-placement-api apache config
  copy: content='' dest=/etc/apache2/sites-available/placement-api.conf owner=root group=root mode=0644
  when: inventory_hostname in groups['placement']

- name: mask autostarting of placement controller services
  service_mask: name={{ item }} state=masked
  with_items:
    - placement-api

- name: install placement controller packages
  apt:
    name:
    - placement-api

- name: create placement databases
  mysql_db: name={{ item }}
    login_host={{ placement_mysql_server }} login_user=root login_password={{ mysql_root_password }}
    state=present
  with_items:
    - "{{ placement_db }}"
  when: inventory_hostname == groups['placement'][0]

- name: create placement database users
  mysql_user: name={{ item.0.user }} password={{ item.0.password }} host='{{ item.1 }}' priv={{ item.0.db }}.*:ALL
    login_host={{ placement_mysql_server }} login_user=root login_password={{ mysql_root_password }}
    state=present
  when: inventory_hostname == groups['placement'][0]
  with_nested:
    -
      - { db: '{{ placement_db }}', user: '{{ placement_db_user }}', password: '{{ placement_db_password }}' }
    -
      - '%'
      - 'localhost'

- name: install placement configs
  template: src=placement.conf.j2 dest=/etc/placement/placement.conf owner=placement group=root mode=0460
  notify:
    - signal apache to reload

- name: sync placement db
  command: su placement -s /bin/sh -c "/usr/bin/placement-manage db sync"
  register: db_sync
  changed_when: '"migrate.versioning.api" in db_sync.stderr'
  when: inventory_hostname == groups['placement'][0]

- name: create /var/www/cgi-bin/placement
  file: path=/var/www/cgi-bin/placement state=directory owner=root group=root mode=0755
  notify: signal apache to reload

- name: link placement-placement-api
  file: src=/usr/bin/placement-api dest=/var/www/cgi-bin/placement/placement-api state=link
  when: inventory_hostname in groups['placement']
  notify: signal apache to reload

#- name: unmask autostarting of placement controller services
#  service_mask: name={{ item }} state=unmasked
#  with_items:
#    - placement-api
#  when: inventory_hostname in groups['placement']

- meta: flush_handlers

#- name: ensure placement controller servies are started
#  service: name={{ item }} state=started enabled=yes
#  with_items:
#    - placement-api
#  when: inventory_hostname in groups['placement']
