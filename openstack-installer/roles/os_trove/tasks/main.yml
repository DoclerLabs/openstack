---

- name: create trove vhost in rabbitmq
  rabbitmq_vhost: node="rabbit@{{ groups['rabbitmq'][0] }}" name="{{ trove_rabbit_vhost }}"
  delegate_to: "{{ groups['rabbitmq'][0] }}"
  run_once: True

- name: create trove user in rabbitmq
  rabbitmq_user: node="rabbit@{{ groups['rabbitmq'][0] }}"
      user="{{ trove_rabbit_user }}" password="{{ trove_rabbit_password }}"
      vhost="{{ trove_rabbit_vhost }}"
      configure_priv=".*" read_priv=".*" write_priv=".*"
  delegate_to: "{{ groups['rabbitmq'][0] }}"
  run_once: True

- name: ensure the trove vhost contains the HA policy
  rabbitmq_policy:
    node: "rabbit@{{ groups['rabbitmq'][0] }}"
    vhost: "{{ trove_rabbit_vhost }}"
    name: HA
    pattern: '.*'
    tags:
      "ha-mode": "all"
      "ha-sync-mode": "automatic"
  delegate_to: "{{ groups['rabbitmq'][0] }}"
  run_once: True

- name: install CA certificate
  copy: src="{{ SSLCACertificateFileSource }}" dest="{{ SSLCACertificateFile }}" owner=root group=root mode=0644
  when: SSLCACertificateFile != ''

- name: mask autostarting of trove services
  service_mask: name={{ item }} state=masked
  with_items:
    - trove-api
    - trove-conductor
    - trove-taskmanager

- name: install trove packages
  apt:
    name:
    - python3-troveclient
    - python3-keystoneclient
    - python3-glanceclient
    - python3-shade
    - python3-trove
    - trove-api
    - trove-taskmanager
    - trove-conductor
    - trove-taskmanager

- name: ensure python-trove is not installed
  apt: name=python-trove state=absent

- name: set up trove network in neutron
  os_network:
    auth:
      auth_url: "{{ keystone_proto }}://{{ keystone_admin_address }}:5000/v3"
      username: "{{ trove_admin_user }}"
      password: "{{ trove_admin_password }}"
      domain_name: "{{ trove_domain_name }}"
      project_name: "{{ trove_project_name }}"
      project_domain_name: "{{ trove_project_domain_name }}"
    cacert: "{{ SSLCACertificateFile }}"
    validate_certs: "{{ ssl_insecure | ternary(False, True) }}"
    region_name: "{{ keystone_region_name }}"
    endpoint_type: internal
    name: "{{ trove_net_name }}"
    provider_network_type: "{{ trove_net_type }}"
    provider_physical_network: "{{ trove_physical_network }}"
    provider_segmentation_id: "{{ trove_net_segmentation_id }}"
    external: False
    shared: True
    state: present
  register: trove_net
  run_once: True

- name: set up trove subnet in neutron
  os_subnet:
    auth:
      auth_url: "{{ keystone_proto }}://{{ keystone_admin_address }}:5000/v3"
      username: "{{ trove_admin_user }}"
      password: "{{ trove_admin_password }}"
      domain_name: "{{ trove_domain_name }}"
      project_name: "{{ trove_project_name }}"
      project_domain_name: "{{ trove_project_domain_name }}"
    cacert: "{{ SSLCACertificateFile }}"
    validate_certs: "{{ ssl_insecure | ternary(False, True) }}"
    region_name: "{{ keystone_region_name }}"
    endpoint_type: internal
    name: trove-subnet
    network_name: "{{ trove_net_name }}"
    cidr: "{{ trove_subnet_cidr }}"
    state: present
  run_once: True

- name: determine nova project id
  keystone_user:
    login_project_name=admin
    login_user=admin
    login_domain_name="Default"
    login_password="{{ keystone_admin_password }}"
    endpoint="{{ keystone_proto }}://{{ keystone_admin_address }}:5000/v3"
    project_domain="{{ nova_project_domain_name }}"
    project="{{ nova_project_name }}"
    cacert="{{ SSLCACertificateFile }}"
    insecure={{ ssl_insecure | ternary("true", "false") }}
  register: nova_project_id
  run_once: True

- name: install trove configs
  template: src={{ item }}.j2 dest=/etc/trove/{{ item }} mode=0460 owner=trove group=root
  with_items:
    - trove.conf
    - trove-guestagent.conf
  notify: restart trove

- name: link trove configs
  file: src=trove.conf dest=/etc/trove/{{ item }} state=link force=yes
  with_items:
    - trove-conductor.conf
    - trove-taskmanager.conf
  notify: restart trove

- name: create trove database
  mysql_db: name={{ trove_db }}
    login_host={{ trove_mysql_server }} login_user=root login_password={{ mysql_root_password }}
    state=present
  run_once: True

- name: create trove database user
  mysql_user: name={{ trove_db_user }} password={{ trove_db_password }} host={{ item }} priv={{ trove_db }}.*:ALL
    login_host={{ trove_mysql_server }} login_user=root login_password={{ mysql_root_password }}
    state=present
  run_once: True
  with_items:
    - localhost
    - '%'

- name: sync trove db
  command: su trove -s /bin/sh -c "/usr/bin/trove-manage db_sync"
  register: db_sync
  changed_when: '"migrate.versioning.api" in db_sync.stderr'
  run_once: True

- name: unmask autostarting of trove services
  service_mask: name={{ item }} state=unmasked
  with_items:
    - trove-api
    - trove-conductor
    - trove-taskmanager

- meta: flush_handlers

- name: ensure trove services are started
  service: name={{ item }} state=started enabled=yes
  with_items:
    - trove-api
    - trove-taskmanager
    - trove-conductor
