---

- hosts: panko[0]
  max_fail_percentage: 0
  roles:
    - role: os_keystone_service
      keystone_service_name: panko
      keystone_service_type: event
      keystone_service_description: "OpenStack Telemetry Service"
      keystone_public_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_public_address }}:8977"
      keystone_internal_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_internal_address }}:8977"
      keystone_admin_url: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}://{{ os_admin_address }}:8977"
      keystone_region: "{{ keystone_region_name }}"
      keystone_users:
        - keystone_user: "{{ panko_admin_user | default('panko') }}"
          keystone_domain_name: "{{ panko_domain_name | default(keystone_domain_name) }}"
          keystone_password: "{{ panko_admin_password }}"
          keystone_project_name: "{{ keystone_service_project_name | default('service') }}"
          keystone_project_domain_name: "{{ keystone_service_project_domain_name | default(keystone_domain_name) }}"
          keystone_role:
            - admin
            - service

- hosts: mongodb
  become: True
  max_fail_percentage: 0
  tasks:
    - name: determine the primary node
      command: mongo --quiet --eval 'rs.isMaster().ismaster'
      register: mongo_master
      changed_when: False

    - name: create panko mongo user
      mongodb_user: login_user=admin login_password={{ mongodb_admin_password }}
                    database=panko name=panko password={{ panko_db_password }} roles='readWrite,dbAdmin'
      when: mongo_master.stdout == 'true' and panko_backend | default('mysql') == 'mongodb'

- hosts: panko
  become: True
  max_fail_percentage: 0
  roles:
    - apt

    - os_panko

    - role: apache_frontend
      apache_service_name: panko
      apache_service_ssl: "{{ os_ssl | default(False) }}"
      apache_services:
        - { port: 8977, wsgi_process: "panko-api", wsgi_user: "panko", wsgi_group: "panko", wsgi_script: "/var/www/cgi-bin/panko/panko-api" }

- hosts: haproxy
  become: True
  max_fail_percentage: 0
  roles:
    - role: haproxy_service
      haproxy_services:
        - haproxy_service_name: panko_api
          haproxy_backend_nodes: "{{ groups['panko'] }}"
          haproxy_bind_hosts:
            - "{{ vip_mgmt }}"
            - "{{ vip_public }}"
          haproxy_port: 8977
          haproxy_balance_type: "{{ (os_ssl | default(False)) | ternary('https', 'http') }}"
          haproxy_backend_options: "{{ (os_ssl | default(False)) | ternary(['httpchk'], ['forwardfor', 'httpchk', 'httplog']) }}"
